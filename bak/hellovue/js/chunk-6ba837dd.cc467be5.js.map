{"version":3,"sources":["webpack:///./node_modules/rbush/index.js","webpack:///./src/components/ol/Openlayers.vue?8b46","webpack:///./node_modules/quickselect/quickselect.js","webpack:///./src/views/openlayers.vue?90d6","webpack:///./src/components/ol/Openlayers.vue?1cf7","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/OverlayPositioning.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/Overlay.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/MapBrowserPointerEvent.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/pointer/EventSource.js","webpack:///./node_modules/ol/pointer/MouseSource.js","webpack:///./node_modules/ol/pointer/MsSource.js","webpack:///./node_modules/ol/pointer/NativeSource.js","webpack:///./node_modules/ol/pointer/PointerEvent.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/pointer/TouchSource.js","webpack:///./node_modules/ol/pointer/PointerEventHandler.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/control/util.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/ImageBase.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/ImageCanvas.js","webpack:///./node_modules/ol/LayerType.js","webpack:///./node_modules/ol/layer/VectorRenderType.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/render/canvas/Immediate.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/canvas/Map.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/renderer/canvas/IntermediateCanvas.js","webpack:///./node_modules/ol/renderer/canvas/ImageLayer.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/render/ReplayGroup.js","webpack:///./node_modules/ol/render/ReplayType.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/render/replay.js","webpack:///./node_modules/ol/render/canvas/Replay.js","webpack:///./node_modules/ol/render/canvas/ImageReplay.js","webpack:///./node_modules/ol/render/canvas/LineStringReplay.js","webpack:///./node_modules/ol/render/canvas/PolygonReplay.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/render/canvas/TextReplay.js","webpack:///./node_modules/ol/render/canvas/ReplayGroup.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/layer/VectorTileRenderType.js","webpack:///./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/source/Source.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///src/components/ol/Openlayers.vue","webpack:///./src/components/ol/Openlayers.vue?f7ff","webpack:///./src/components/ol/Openlayers.vue?e0eb","webpack:///src/views/openlayers.vue","webpack:///./src/views/openlayers.vue?f9d3","webpack:///./src/views/openlayers.vue"],"names":["module","exports","rbush","default","quickselect","__webpack_require__","maxEntries","format","this","_maxEntries","Math","max","_minEntries","ceil","_initFormat","clear","findItem","item","items","equalsFn","indexOf","i","length","calcBBox","node","toBBox","distBBox","children","k","p","destNode","createNode","minX","Infinity","minY","maxX","maxY","child","extend","leaf","a","b","min","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","enlargedArea","intersectionArea","contains","intersects","height","multiSelect","arr","left","right","n","compare","mid","stack","pop","push","prototype","all","_all","data","search","bbox","result","len","childBBox","nodesToSearch","collides","load","insert","_build","slice","_splitRoot","tmpNode","_insert","remove","parent","index","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","N","M","log","pow","j","right2","right3","N2","N1","sqrt","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","m","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","xMargin","_allDistMargin","yMargin","sort","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Openlayers_vue_vue_type_style_index_0_id_19db3d6a_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Openlayers_vue_vue_type_style_index_0_id_19db3d6a_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","global","factory","quickselectStep","defaultCompare","z","s","exp","sd","newLeft","floor","newRight","t","swap","tmp","openlayersvue_type_template_id_1d8b0d48_render","_vm","_h","$createElement","_c","_self","staticClass","attrs","mapWidth","mapHeight","staticRenderFns","Openlayersvue_type_template_id_19db3d6a_scoped_true_render","ref","id","href","on","click","$event","closePopup","_v","_s","Openlayersvue_type_template_id_19db3d6a_scoped_true_staticRenderFns","MapEventType","POSTRENDER","MOVESTART","MOVEEND","util_abstract","Error","uidCounter_","getUid","obj","ol_uid","String","VERSION","ObjectEventType","PROPERTYCHANGE","obj_assign","Object","assign","target","var_sources","arguments$1","arguments","undefined","TypeError","output","ii","source","key","hasOwnProperty","obj_clear","object","property","getValues","values","obj_isEmpty","bindListener","listenerObj","boundListener","evt","listener","bindTo","callOnce","unlistenByKey","call","findListener","listeners","opt_this","opt_setDeleteIndex","deleteIndex","getListeners","type","listenerMap","getListenerMap","opt_create","ol_lm","removeListenerMap","removeListeners","removeEventListener","keys","listen","opt_once","addEventListener","listenOnce","unlisten","unlistenAll","Disposable_Disposable","disposed_","dispose","disposeInternal","ol_Disposable","TRUE","FALSE","VOID","Event","propagationStopped","stopPropagation","preventDefault","events_Event","Target_Target","Disposable","Target","pendingRemovals_","dispatching_","listeners_","__proto__","create","constructor","dispatchEvent","event","propagate","pendingRemovals","hasListener","opt_type","events_Target","EventType","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","Observable_Observable","EventTarget","Observable","revision_","changed","getRevision","Array","isArray","once","un","ol_Observable","ObjectEvent","oldValue","Object_BaseObject","BaseObject","opt_values","values_","setProperties","get","value","getKeys","getProperties","notify","eventType","getChangeEventType","set","opt_silent","unset","changeEventTypeCache","ol_Object","OverlayPositioning","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","CENTER_LEFT","CENTER_CENTER","CENTER_RIGHT","TOP_LEFT","TOP_CENTER","TOP_RIGHT","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","style","cache","font","document","createElement","family","fontFamily","split","createCanvasContext2D","opt_width","opt_height","canvas","width","getContext","dom_outerWidth","element","offsetWidth","getComputedStyle","parseInt","marginLeft","marginRight","dom_outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","oldNode","parentNode","replaceChild","removeNode","removeChild","removeChildren","lastChild","AssertionError_AssertionError","AssertionError","code","message","name","ol_AssertionError","assert","assertion","errorCode","Corner","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","opt_extent","extent_clone","closestSquaredDistanceXY","x","y","dx","dy","containsCoordinate","coordinate","extent_containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","end","stride","extendFlatCoordinates","equals","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","extent_getArea","extent_isEmpty","getWidth","getHeight","extent_getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","getIntersection","intersection","extent_intersects","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","Property","ELEMENT","MAP","OFFSET","POSITION","POSITIONING","Overlay_Overlay","Overlay","options","insertFirst","stopEvent","className","position","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","visible","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getId","getMap","getOffset","getPosition","getPositioning","appendChild","map","render","updatePixelPosition","container","getOverlayContainerStopEvent","getOverlayContainer","insertBefore","childNodes","panIntoView","setMap","getTargetElement","mapRect","getRect","getSize","overlayRect","offsetLeft","offsetRight","offsetTop","offsetBottom","delta","abs","getView","getCenter","centerPx","getPixelFromCoordinate","newCenterPx","animate","getCoordinateFromPixel","duration","easing","box","getBoundingClientRect","offsetX","window","pageXOffset","offsetY","top","pageYOffset","setVisible","display","isRendered","pixel","mapSize","updateRenderedPosition","round","bottom","getOptions","ol_Overlay","CollectionEventType","ADD","REMOVE","Collection_Property","LENGTH","CollectionEvent","opt_element","Collection_Collection","Collection","opt_array","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","forEach","f","array","getArray","insertAt","elem","removeAt","prev","setAt","opt_except","ol_Collection","MapEvent","opt_frameState","frameState","ol_MapEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","getEventPixel","dragging","ol_MapBrowserEvent","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","CANVAS_LINE_DASH","has","setLineDash","e","TOUCH","POINTER","MSPOINTER","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserPointerEvent","pointerEvent","ol_MapBrowserPointerEvent","pointer_EventType","EventSource_EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","pointer_EventSource","POINTER_ID","POINTER_TYPE","DEDUP_DIST","mousedown","inEvent","isEventSimulatedFromTouch_","toString","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","MouseSource","EventSource","lastTouches","lts","clientX","clientY","l","cloneEvent","pd","pointerId","isPrimary","pointerType","pointer_MouseSource","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","pointer_MsSource","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","pointer_NativeSource","HAS_BUTTONS","PointerEvent","_Event","opt_eventDict","eventDict","buttons","getButtons","pressure","getPressure","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","tiltX","tiltY","hwTimestamp","which","ev","MouseEvent","pointer_PointerEvent","numberSafeCompareFunction","includes","linearFindNearest","direction","reverseSubArray","begin","array_extend","extension","array_remove","found","array_equals","arr1","arr2","len1","stableSort","compareFnc","isSorted","opt_func","opt_strict","every","currentVal","res","CLICK_COUNT_TIMEOUT","TouchSource_POINTER_TYPE","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","TouchSource_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","setTimeout","resetClickCountHandler_","bind","clearTimeout","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","touch","d","Number","out","i$1","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt","pointer_TouchSource","CLONE_PROPS","PointerEventHandler_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","contains_","contained","inType","wrapMouseEvent","pointer_PointerEventHandler","MapBrowserEventHandler_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","ol_MapBrowserEventHandler","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","render_EventType","POSTCOMPOSE","PRECOMPOSE","RENDER","RENDERCOMPLETE","TileState","IDLE","LOADING","LOADED","EMPTY","ABORT","PriorityQueue_PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","structs_PriorityQueue","TileQueue_TileQueue","PriorityQueue","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","handleTileChange","getTilesLoading","state","getState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","ol_TileQueue","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","clamp","cosh","squaredSegmentDistance","math_squaredDistance","solveLinearSystem","mat","maxRow","maxEl","r","absValue","coef","toRadians","angleInDegrees","PI","modulo","lerp","createExtent","none","createSnapToResolutions","resolutions","power","createSnapToPower","maxResolution","opt_maxLevel","oldLevel","newLevel","disable","rotationconstraint_none","createSnapToN","theta","createSnapToZero","opt_tolerance","tolerance","ViewHint","ANIMATING","INTERACTING","ViewProperty","CENTER","RESOLUTION","ROTATION","add","coordinate_equals","coordinate1","coordinate2","coordinate_rotate","angle","cosAngle","sinAngle","coordinate_scale","scale","easeIn","easeOut","inAndOut","linear","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","GeometryLayout","XY","XYZ","XYM","XYZM","transform2D","transform","opt_dest","dest","transform_rotate","anchor","anchorX","anchorY","transform_scale","sx","sy","transform_translate","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","Projection_Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","proj_Projection","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","Projection","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","tan","epsg3857_toEPSG4326","atan","epsg4326_RADIUS","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","projections_cache","projections_get","projections_add","projection","transforms","transforms_add","destination","transformFn","sourceCode","destinationCode","transforms_get","cloneTransform","identityTransform","addProjection","addProjections","projections","proj_get","projectionLike","opt_units","pointResolution","getter","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","equivalent","equalUnits","transformFunc","sourceProjection","destinationProjection","proj_getTransform","proj_transform","addCommon","tmp_","transform_reset","transform_set","multiply","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","c","setFromArray","ol_transform_scale","ol_transform_translate","transform_compose","dx1","dy1","dx2","dy2","invert","det","determinant","tmpTransform","Geometry_Geometry","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","clone","closestPointXY","closestPoint","minSquaredDistance","containsXY","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","rotate","opt_sy","opt_anchor","simplify","getSimplifiedGeometry","squaredTolerance","getType","applyTransform","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","geom_Geometry","SimpleGeometry_SimpleGeometry","SimpleGeometry","layout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","geom_SimpleGeometry","area_linearRing","twiceArea","area_linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","jj","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","douglasPeucker","simplifiedOffset","markers","last","first","maxSquaredDistance","snap","quantize","quantizeArray","simplifiedEnds","LinearRing_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","getArea","geom_LinearRing","Point_Point","Point","geom_Point","linearRingContainsExtent","outside","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","isNaN","ret","point1","point2","intersectsLineString","coordinatesExtent","intersectsLinearRing","intersectsLinearRingArray","reverse_coordinates","linearRingIsClockwise","edge","linearRingIsOriented","opt_right","isClockwise","orientLinearRings","reverse","Polygon_Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","geom_Polygon","fromExtent","DEFAULT_MIN_ZOOM","View_View","View","hints_","animations_","updateAnimationKey_","updateAnimations_","projection_","applyOptions_","properties","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","minResolution","zoomFactor_","zoomFactor","resolutions_","minZoom_","minZoom","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","zoom","constrainResolution","getResolution","options_","getUpdatedOptions_","newOptions","getZoom","getRotation","var_args","animationCount","isDef","setCenter","setZoom","setRotation","animationCallback","Date","now","series","animation","complete","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","isNoopAnimation","setHint","getAnimating","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","calculateCenterZoom","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","getSizeFromViewport_","selector","querySelector","metrics","constrainCenter","opt_delta","opt_direction","constrainRotation","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","maxZoom","getMinZoom","setMinZoom","getProjection","getResolutions","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelRatio","pixelResolution","nearest","getResolutionForZoom","fit","geometryOrExtent","geometry","padding","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","centerX","centerY","setResolution","centerOn","hint","returnValue","defaultMaxZoom","defaultZoomFactor","defaultMaxResolution","defaultMinResolution","enableRotation","ol_View","layer_Property","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","Base_BaseLayer","BaseLayer","opacity","zIndex","state_","getLayerState","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getZIndex","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setZIndex","zindex","Base","State","UNDEFINED","READY","Group_Property","LAYERS","Group_LayerGroup","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","states","pos","ownLayerState","layerState","Group","hasArea","size_scale","ratio","toSize","PluggableMap_PluggableMap","PluggableMap","optionsInternal","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","pixelRatio_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","overlayEvents","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyboardEventTarget","keyHandlerKeys_","handleBrowserEvent","controls","interactions","overlays_","overlays","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","overlay","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","getOverlays","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","eventPosition","getTarget","getElementById","pixelToCoordinateTransform","getOverlayById","coordinateToPixelTransform","getRenderer","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","interactionsArray","getActive","cont","handleEvent","handlePostRender","tileQueue","hints","viewHints","getLoading","dispatchRenderEvent","postRenderFunctions","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","setAttribute","layerGroup","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","time","viewState","previousFrameState","layerStatesArray","layerStates","skippedFeatureUids","usedTiles","renderFrame","moveStart","idle","setLayerGroup","setSize","setView","skipFeature","computedStyle","parseFloat","unskipFeature","ol_PluggableMap","getSource","loading","Control_Control","Control","target_","listenerKeys","control_Control","Layer_Layer","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","handleSourceChange_","renderEvent","visibleAtResolution","layer_Layer","Attribution_Attribution","Attribution","Attribution_render","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","mapEvent","control_Attribution","Rotate_Rotate","Rotate","Rotate_render","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","msTransform","webkitTransform","control_Rotate","Zoom_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","newResolution","control_Zoom","defaults","zoomControl","zoomOptions","rotateControl","rotateOptions","attributionControl","attribution","attributionOptions","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","lastIndex","firstIndex","getAngle","ol_Kinetic","interaction_Property","ACTIVE","Interaction_Interaction","Interaction","setActive","active","pan","opt_duration","Interaction_rotate","rotateWithoutConstraints","currentRotation","zoomWithoutConstraints","zoomByDelta","interaction_Interaction","DoubleClickZoom","DoubleClickZoom_handleEvent","delta_","interaction_DoubleClickZoom","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","Pointer_PointerInteraction","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","Pointer_centroid","pointerEvents","Pointer","DragPan_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centroid","distance","centerpx","interaction_DragPan","DragRotate_DragRotate","DragRotate","lastAngle_","interaction_DragRotate","Box_RenderBox","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","pixels","getGeometry","Box","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","DragBoxEvent","DragBox_DragBox","DragBox","box_","minArea_","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","interaction_DragBox","DragZoom_DragZoom","DragZoom","out_","mapExtent","boxPixelExtent","factor","interaction_DragZoom","KeyCode","UP","DOWN","KeyboardPan_KeyboardPan","KeyboardPan","KeyboardPan_handleEvent","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","mapUnitsDelta","interaction_KeyboardPan","KeyboardZoom_KeyboardZoom","KeyboardZoom","KeyboardZoom_handleEvent","charCode","charCodeAt","interaction_KeyboardZoom","MAX_DELTA","Mode","TRACKPAD","MouseWheelZoom_MouseWheelZoom","MouseWheelZoom","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","decrementInteractingHint_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","rebound","timeLeft","handleWheelZoom_","setMouseAnchor","interaction_MouseWheelZoom","PinchRotate_PinchRotate","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","interaction_PinchRotate","PinchZoom_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interaction_PinchZoom","interaction_defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","ERROR_THRESHOLD","ENABLE_RASTER_REPROJECTION","ImageBase_ImageBase","ImageBase","getImage","getPixelRatio","ol_ImageBase","ImageState","ImageCanvas_ImageCanvas","ImageCanvas","opt_loader","loader_","canvas_","error_","getError","handleLoad_","err","ol_ImageCanvas","LayerType","IMAGE","TILE","VECTOR_TILE","VECTOR","VectorRenderType","RenderEvent","opt_vectorContext","opt_context","opt_glContext","vectorContext","context","glContext","render_Event","LRUCache_LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","replace","prune","structs_LRUCache","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","checkedFonts","measureContext","textHeights","checkFont","interval","referenceWidth","retries","checked","referenceFonts","text","isAvailable","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","setInterval","measureTextHeight","span","heights","body","measureTextWidth","rotateAtOffset","resetTransform","drawImage","image","originX","originY","w","h","alpha","globalAlpha","setTransform","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","color_toString","fromNamed","el","rgb","MAX_CACHE_SIZE","cacheSize","fromStringInternal_","g","exec","hasAlpha","substr","normalize","asColorLike","VectorContext_VectorContext","drawCustom","renderer","drawGeometry","setStyle","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","fillStyle","strokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","render_VectorContext","Immediate_CanvasImmediateRenderer","VectorContext","CanvasImmediateRenderer","viewRotation","context_","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","beginPath","arc","fill","stroke","getFill","getStroke","getText","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","lineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","textState","contextTextState","textAlign","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageAnchor","getAnchor","imageImage","imageOrigin","getOrigin","imageSize","getRotateWithView","getScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","Immediate","IconImageCache","cache_","cacheSize_","maxCacheSize_","src","crossOrigin","colorString","expire","iconImage","maxCacheSize","shared","Map_MapRenderer","MapRenderer","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","registerLayerRenderers","constructors","calculateMatrices2D","removeLayerRendererByKey_","thisArg","thisArg2","viewResolution","translatedCoordinate","projectionExtent","worldWidth","worldsAway","numLayers","layerRenderer","getLayerRenderer","getWrapX","hasFeature","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","expireIconCache","sortByZIndex","state1","state2","renderer_Map","layerRendererConstructors","Map_CanvasMapRenderer","CanvasMapRenderer","getTransform","composeEvent","clearRect","save","prepareFrame","composeFrame","restore","forEachLayerAtCoordinate","ctor","canvas_Map","Layer_LayerRenderer","LayerRenderer","layer_","createLoadedTileFinder","tiles","tileRange","tileCoord","forEachLoadedTile","getLayer","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","scheduleExpireCache","tileSource","postRenderFunction","expireCache","updateUsedTiles","zKey","manageTilePyramid","currentZ","preload","opt_tileCallback","getTileRangeForExtentAndZ","getTile","getTileCoordCenter","useTile","renderer_Layer","Layer_CanvasLayerRenderer","CanvasLayerRenderer","renderedResolution","clip","topLeft","topRight","bottomRight","bottomLeft","dispatchComposeEvent_","opt_transform","postCompose","preCompose","canvas_Layer","IntermediateCanvas_IntermediateCanvasRenderer","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","imageData","getImageData","IntermediateCanvas","ImageLayer_CanvasImageLayerRenderer","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","viewCenter","imageSource","vectorRenderer","renderedExtent","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","compose","imageExtent","imageResolution","imagePixelRatio","getRenderMode","mapRenderer","ImageLayer","TileRange","TileRange_createOrUpdate","containsTileRange","ol_TileRange","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","opt_noContext","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getPreload","setState","getInterimTile","sourceRevision","getTileGridForProjection","getZForResolution","oversampling","getTileRangeExtent","tilePixelRatio","getTilePixelRatio","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","uid","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","tilePixelSize","getTilePixelSize","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","zs","tileCoordKey","getGutterForProjection","getTileCoordExtent","getTileCoord","drawTileImage","gutter","transition","getTileImage","getOpaque","alphaChanged","endTransition","canvas_TileLayer","ReplayGroup_ReplayGroup","getReplay","replayType","addDeclutter","group","render_ReplayGroup","ReplayType","DEFAULT","TEXT","lineStringLength","drawTextOnPath","measure","startM","maxAngle","numChars","previousAngle","segmentM","chunk","chunkLength","char","charAt","charLength","charM","segmentPos","interpolate","unshift","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","ORDER","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","Replay_tmpExtent","Replay_tmpTransform","Replay_CanvasReplay","CanvasReplay","maxExtent","overlaps","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p1","p2","p3","p4","fillInstruction","strokeInstruction","fill_","setStrokeStyle_","replayImage_","declutterGroup","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastCoord","nextCoord","skipped","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayEndss","replayBegin","myEnds","endGeometry","finish","origin","repeatSize","instruction","renderDeclutter_","groupCount","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","fn","rotateWithView","backgroundFill","backgroundStroke","baseline","fillKey","strokeKey","strokeWidth","textKey","pathLength","textLength","textReplay","textStates","parts","cc","chars","part","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","Replay","ImageReplay_CanvasImageReplay","CanvasImageReplay","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","scale_","width_","drawCoordinates_","myBegin","hitDetectionImage","getHitDetectionImage","ImageReplay","LineStringReplay_CanvasLineStringReplay","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","LineStringReplay","PolygonReplay_CanvasPolygonReplay","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","PolygonReplay","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","TextPlacement","LINE","TextReplay_CanvasTextReplay","CanvasTextReplay","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","geometryType","placement","flatEnd","flatOffset","o","oo","range","drawChars_","interiorPoints","drawTextImage_","align","lines","numLines","widths","measureTextWidths","lineHeight","renderWidth","leftRight","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","currentWidth","TextReplay","BATCH_CONSTRUCTORS","Circle","Default","Image","LineString","Text","ReplayGroup_CanvasReplayGroup","ReplayGroup","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","overlaps_","resolution_","renderBuffer_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","declutter","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","hitExtent","contextSize","declutteredFeatures","mask","getCircleArray","zIndexKey","Constructor","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","circleArrayCache","0","fillCircleArrayRowToMiddle","arraySize","error","replayDeclutter","zz","replayData","canvas_ReplayGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","MultiPoint","renderMultiPointGeometry","MultiLineString","renderMultiLineStringGeometry","MultiPolygon","renderMultiPolygonGeometry","GeometryCollection","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","replayGroup","circleReplay","renderFeature","getImageState","unlistenImageChange","listenImageChange","renderFeatureInternal","renderGeometry","geometryRenderer","getGeometries","lineStringReplay","polygonReplay","imageReplay","VectorLayer_CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","getDeclutter","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","getOverlaps","loadFeatures","styles","styleFunction","getStyleFunction","dirty","forEachFeatureInExtent","VectorLayer","VectorTileRenderType","HYBRID","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","vector","VectorTileLayer_CanvasVectorTileLayerRenderer","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","renderMode","createReplayGroup_","renderTileImage_","layerRevision","this$1","revision","renderOrder","replayState","getReplayState","renderedRenderOrder","sourceTileGrid","getTileGrid","loop","tt","sourceTile","tileKeys","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setProjection","getFeatures","setReplayGroup","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","renderedTileRevision","wrappedTileCoord","pixelScale","VectorTileLayer","Map_Map","Map","ol_Map","TileProperty","PRELOAD","USE_INTERIM_TILES_ON_ERROR","Tile_TileLayer","TileLayer","setPreload","setUseInterimTilesOnError","layer_Tile","Tile_Tile","Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","ol_Tile","ImageTile_ImageTile","ImageTile","tileLoadFunction","crossOrigin_","src_","imageListenerKeys_","tileLoadFunction_","unlistenImage_","getBlankImage","handleImageError_","handleImageLoad_","naturalWidth","naturalHeight","ctx","fillRect","ol_ImageTile","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","tilecoord_getKey","fromKey","hash","withinExtentAndZ","getFullTileRange","TileCache_TileCache","TileCache","pruneExceptNewestZ","ol_TileCache","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","targetExtent","triangulation","sources","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","v1","u2","v2","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","p0","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation_Triangulation","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","targetCoverageX","centerSrc","centerSrcEstimX","centerSrcErrorSquared","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Triangulation","Tile_ReprojTile","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","getTileSize","leftToLoad","sourceListenKey","reproj_Tile","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","url","urls","match","startCharCode","stopCharCode","fromCharCode","stop","Source_Source","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","refresh","setAttributions","attributionLike","source_Source","tmpTileCoord","TileGrid_TileGrid","origins","origin_","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","fullTileRanges","tilegrid_TileGrid","getForProjection","createForProjection","extentFromProjection","createForExtent","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","thisProj","getTileCoordForTileUrlFunction","opt_projection","TileSourceEvent","source_Tile","TileEventType","TILELOADSTART","TILELOADEND","TILELOADERROR","UrlTile_UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","setTileLoadFunction","source_UrlTile","TileImage_TileImage","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","source_TileImage","XYZ_XYZ","source_XYZ","Openlayersvue_type_script_lang_js_","mounted","initMap","methods","closer","onclick","blur","console","info","alert","ol_Openlayersvue_type_script_lang_js_","component","componentNormalizer","Openlayers","openlayersvue_type_script_lang_js_","components","views_openlayersvue_type_script_lang_js_","openlayers_component","__webpack_exports__"],"mappings":"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","file":"js/chunk-6ba837dd.cc467be5.js","sourcesContent":["'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Openlayers.vue?vue&type=style&index=0&id=19db3d6a&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Openlayers.vue?vue&type=style&index=0&id=19db3d6a&scoped=true&lang=css&\"","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"test\"},[_c('Openlayers',{attrs:{\"mapWidth\":\"100%\",\"mapHeight\":\"600px\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"rootmap\",attrs:{\"id\":\"map\"}},[_c('div',{staticClass:\"ol-popup\",attrs:{\"id\":\"popup\"}},[_c('a',{staticClass:\"ol-popup-closer\",attrs:{\"href\":\"#\",\"id\":\"popup-closer\"},on:{\"click\":function($event){_vm.closePopup()}}}),_c('div',{attrs:{\"id\":\"popup-content\"}},[_vm._v(_vm._s(10+12))])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function() {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '5.3.0';\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  var arguments$1 = arguments;\n\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments$1[i];\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  var values = [];\n  for (var property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  var property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  var listenerMap = getListenerMap(target);\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap && opt_create) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n  delete target.ol_lm;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      /** @type {import(\"./events/Target.js\").default} */ (target).\n        removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        removeListenerMap(target);\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  var listenerMap = getListenerMap(target, true);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    /** @type {import(\"./events/Target.js\").default} */ (target).\n      addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    var listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    /** @type {import(\"./events/Target.js\").default} */ (key.target).\n      removeEventListener(key.type, key.boundListener);\n    var listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  var listenerMap = getListenerMap(target);\n  if (listenerMap) {\n    for (var type in listenerMap) {\n      removeListeners(target, type);\n    }\n  }\n}\n\n//# sourceMappingURL=events.js.map","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = function Disposable() {\n  /**\n   * The object has already been disposed.\n   * @type {boolean}\n   * @private\n   */\n  this.disposed_ = false;\n};\n\n/**\n * Clean up.\n */\nDisposable.prototype.dispose = function dispose () {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = function disposeInternal () {};\n\nexport default Disposable;\n\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = function Event(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.preventDefault = function preventDefault () {\n  this.propagationStopped = true;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.stopPropagation = function stopPropagation () {\n  this.propagationStopped = true;\n};\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {VOID} from '../functions.js';\nimport Event from './Event.js';\n\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /*@__PURE__*/(function (Disposable) {\n  function Target() {\n\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  if ( Disposable ) Target.__proto__ = Disposable;\n  Target.prototype = Object.create( Disposable && Disposable.prototype );\n  Target.prototype.constructor = Target;\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.addEventListener = function addEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTargetLike|undefined),\n   *     propagationStopped: (boolean|undefined)}|\n   *     import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  Target.prototype.dispatchEvent = function dispatchEvent (event) {\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Target.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this);\n  };\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n   */\n  Target.prototype.getListeners = function getListeners (type) {\n    return this.listeners_[type];\n  };\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  Target.prototype.hasListener = function hasListener (opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  };\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.removeEventListener = function removeEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return Target;\n}(Disposable));\n\n\nexport default Target;\n\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /*@__PURE__*/(function (EventTarget) {\n  function Observable() {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  if ( EventTarget ) Observable.__proto__ = EventTarget;\n  Observable.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Observable.prototype.constructor = Observable;\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  Observable.prototype.changed = function changed () {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  Observable.prototype.getRevision = function getRevision () {\n    return this.revision_;\n  };\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.on = function on (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.once = function once (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  Observable.prototype.un = function un (type, listener) {\n    if (Array.isArray(type)) {\n      for (var i = 0, ii = type.length; i < ii; ++i) {\n        unlisten(this, type[i], listener);\n      }\n      return;\n    } else {\n      unlisten(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  return Observable;\n}(EventTarget));\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (var i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport var ObjectEvent = /*@__PURE__*/(function (Event) {\n  function ObjectEvent(type, key, oldValue) {\n    Event.call(this, type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n  if ( Event ) ObjectEvent.__proto__ = Event;\n  ObjectEvent.prototype = Object.create( Event && Event.prototype );\n  ObjectEvent.prototype.constructor = ObjectEvent;\n\n  return ObjectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /*@__PURE__*/(function (Observable) {\n  function BaseObject(opt_values) {\n    Observable.call(this);\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  if ( Observable ) BaseObject.__proto__ = Observable;\n  BaseObject.prototype = Object.create( Observable && Observable.prototype );\n  BaseObject.prototype.constructor = BaseObject;\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  BaseObject.prototype.get = function get (key) {\n    var value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  };\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  BaseObject.prototype.getKeys = function getKeys () {\n    return Object.keys(this.values_);\n  };\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  BaseObject.prototype.getProperties = function getProperties () {\n    return assign({}, this.values_);\n  };\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  BaseObject.prototype.notify = function notify (key, oldValue) {\n    var eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  };\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.set = function set (key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      var oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.setProperties = function setProperties (values, opt_silent) {\n    for (var key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  };\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.unset = function unset (key, opt_silent) {\n    if (key in this.values_) {\n      var oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  return BaseObject;\n}(Observable));\n\n\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=OverlayPositioning.js.map","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function() {\n  var style;\n  var cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n\n//# sourceMappingURL=css.js.map","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /*@__PURE__*/(function (Error) {\n  function AssertionError(code) {\n    var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    Error.call(this, message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n  if ( Error ) AssertionError.__proto__ = Error;\n  AssertionError.prototype = Object.create( Error && Error.prototype );\n  AssertionError.prototype.constructor = AssertionError;\n\n  return AssertionError;\n}(Error));\n\nexport default AssertionError;\n\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  var extent = createEmpty();\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  var dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(this:T, import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  var area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  var coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  var intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  var intersects = false;\n  var startRel = coordinateRelationship(extent, start);\n  var endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  var coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {removeNode, removeChildren, outerWidth, outerHeight} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning'\n};\n\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = /*@__PURE__*/(function (BaseObject) {\n  function Overlay(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst = options.insertFirst !== undefined ?\n      options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className = options.className !== undefined ?\n      options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n\n    /**\n     * @protected\n     * @type {PanOptions}\n     */\n    this.autoPanAnimation = options.autoPanAnimation || /** @type {PanOptions} */ ({});\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.autoPanMargin = options.autoPanMargin !== undefined ?\n      options.autoPanMargin : 20;\n\n    /**\n     * @protected\n     * @type {{bottom_: string,\n     *         left_: string,\n     *         right_: string,\n     *         top_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      bottom_: '',\n      left_: '',\n      right_: '',\n      top_: '',\n      visible: true\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    listen(\n      this, getChangeEventType(Property.ELEMENT),\n      this.handleElementChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.MAP),\n      this.handleMapChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.OFFSET),\n      this.handleOffsetChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITION),\n      this.handlePositionChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITIONING),\n      this.handlePositioningChanged, this);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning !== undefined ?\n      /** @type {OverlayPositioning} */ (options.positioning) :\n      OverlayPositioning.TOP_LEFT);\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n\n  }\n\n  if ( BaseObject ) Overlay.__proto__ = BaseObject;\n  Overlay.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Overlay.prototype.constructor = Overlay;\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getElement = function getElement () {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  };\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Overlay.prototype.getId = function getId () {\n    return this.id;\n  };\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getMap = function getMap () {\n    return (\n      /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP))\n    );\n  };\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getOffset = function getOffset () {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  };\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPosition = function getPosition () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION))\n    );\n  };\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {OverlayPositioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPositioning = function getPositioning () {\n    return (\n      /** @type {OverlayPositioning} */ (this.get(Property.POSITIONING))\n    );\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleElementChanged = function handleElementChanged () {\n    removeChildren(this.element);\n    var element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleMapChanged = function handleMapChanged () {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    var map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(map,\n        MapEventType.POSTRENDER, this.render, this);\n      this.updatePixelPosition();\n      var container = this.stopEvent ?\n        map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.render = function render () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleOffsetChanged = function handleOffsetChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositionChanged = function handlePositionChanged () {\n    this.updatePixelPosition();\n    if (this.get(Property.POSITION) && this.autoPan) {\n      this.panIntoView();\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositioningChanged = function handlePositioningChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setElement = function setElement (element) {\n    this.set(Property.ELEMENT, element);\n  };\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setMap = function setMap (map) {\n    this.set(Property.MAP, map);\n  };\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setOffset = function setOffset (offset) {\n    this.set(Property.OFFSET, offset);\n  };\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPosition = function setPosition (position) {\n    this.set(Property.POSITION, position);\n  };\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @protected\n   */\n  Overlay.prototype.panIntoView = function panIntoView () {\n    var map = this.getMap();\n\n    if (!map || !map.getTargetElement()) {\n      return;\n    }\n\n    var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    var element = this.getElement();\n    var overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n\n    var margin = this.autoPanMargin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      var offsetLeft = overlayRect[0] - mapRect[0];\n      var offsetRight = mapRect[2] - overlayRect[2];\n      var offsetTop = overlayRect[1] - mapRect[1];\n      var offsetBottom = mapRect[3] - overlayRect[3];\n\n      var delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - margin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + margin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - margin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + margin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenter());\n        var centerPx = map.getPixelFromCoordinate(center);\n        var newCenterPx = [\n          centerPx[0] + delta[0],\n          centerPx[1] + delta[1]\n        ];\n\n        map.getView().animate({\n          center: map.getCoordinateFromPixel(newCenterPx),\n          duration: this.autoPanAnimation.duration,\n          easing: this.autoPanAnimation.easing\n        });\n      }\n    }\n  };\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement|undefined} element The element.\n   * @param {import(\"./size.js\").Size|undefined} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  Overlay.prototype.getRect = function getRect (element, size) {\n    var box = element.getBoundingClientRect();\n    var offsetX = box.left + window.pageXOffset;\n    var offsetY = box.top + window.pageYOffset;\n    return [\n      offsetX,\n      offsetY,\n      offsetX + size[0],\n      offsetY + size[1]\n    ];\n  };\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {OverlayPositioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPositioning = function setPositioning (positioning) {\n    this.set(Property.POSITIONING, positioning);\n  };\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  Overlay.prototype.setVisible = function setVisible (visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  };\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  Overlay.prototype.updatePixelPosition = function updatePixelPosition () {\n    var map = this.getMap();\n    var position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    var pixel = map.getPixelFromCoordinate(position);\n    var mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  };\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  Overlay.prototype.updateRenderedPosition = function updateRenderedPosition (pixel, mapSize) {\n    var style = this.element.style;\n    var offset = this.getOffset();\n\n    var positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    var offsetX = offset[0];\n    var offsetY = offset[1];\n    if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n        positioning == OverlayPositioning.CENTER_RIGHT ||\n        positioning == OverlayPositioning.TOP_RIGHT) {\n      if (this.rendered.left_ !== '') {\n        this.rendered.left_ = style.left = '';\n      }\n      var right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n      if (this.rendered.right_ != right) {\n        this.rendered.right_ = style.right = right;\n      }\n    } else {\n      if (this.rendered.right_ !== '') {\n        this.rendered.right_ = style.right = '';\n      }\n      if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.TOP_CENTER) {\n        offsetX -= this.element.offsetWidth / 2;\n      }\n      var left = Math.round(pixel[0] + offsetX) + 'px';\n      if (this.rendered.left_ != left) {\n        this.rendered.left_ = style.left = left;\n      }\n    }\n    if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n        positioning == OverlayPositioning.BOTTOM_CENTER ||\n        positioning == OverlayPositioning.BOTTOM_RIGHT) {\n      if (this.rendered.top_ !== '') {\n        this.rendered.top_ = style.top = '';\n      }\n      var bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n      if (this.rendered.bottom_ != bottom) {\n        this.rendered.bottom_ = style.bottom = bottom;\n      }\n    } else {\n      if (this.rendered.bottom_ !== '') {\n        this.rendered.bottom_ = style.bottom = '';\n      }\n      if (positioning == OverlayPositioning.CENTER_LEFT ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.CENTER_RIGHT) {\n        offsetY -= this.element.offsetHeight / 2;\n      }\n      var top = Math.round(pixel[1] + offsetY) + 'px';\n      if (this.rendered.top_ != top) {\n        this.rendered.top_ = style.top = top;\n      }\n    }\n  };\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  Overlay.prototype.getOptions = function getOptions () {\n    return this.options;\n  };\n\n  return Overlay;\n}(BaseObject));\n\n\nexport default Overlay;\n\n//# sourceMappingURL=Overlay.js.map","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport var CollectionEvent = /*@__PURE__*/(function (Event) {\n  function CollectionEvent(type, opt_element) {\n    Event.call(this, type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n  }\n\n  if ( Event ) CollectionEvent.__proto__ = Event;\n  CollectionEvent.prototype = Object.create( Event && Event.prototype );\n  CollectionEvent.prototype.constructor = CollectionEvent;\n\n  return CollectionEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /*@__PURE__*/(function (BaseObject) {\n  function Collection(opt_array, opt_options) {\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  if ( BaseObject ) Collection.__proto__ = BaseObject;\n  Collection.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Collection.prototype.constructor = Collection;\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  Collection.prototype.clear = function clear () {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  };\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  Collection.prototype.extend = function extend (arr) {\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  };\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  Collection.prototype.forEach = function forEach (f) {\n    var array = this.array_;\n    for (var i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  };\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  Collection.prototype.getArray = function getArray () {\n    return this.array_;\n  };\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  Collection.prototype.item = function item (index) {\n    return this.array_[index];\n  };\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  Collection.prototype.getLength = function getLength () {\n    return this.get(Property.LENGTH);\n  };\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.insertAt = function insertAt (index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  };\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  Collection.prototype.pop = function pop () {\n    return this.removeAt(this.getLength() - 1);\n  };\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  Collection.prototype.push = function push (elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    var n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  };\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  Collection.prototype.remove = function remove (elem) {\n    var arr = this.array_;\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  Collection.prototype.removeAt = function removeAt (index) {\n    var prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n    return prev;\n  };\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.setAt = function setAt (index, elem) {\n    var n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      var prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem));\n    } else {\n      for (var j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  };\n\n  /**\n   * @private\n   */\n  Collection.prototype.updateLength_ = function updateLength_ () {\n    this.set(Property.LENGTH, this.array_.length);\n  };\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  Collection.prototype.assertUnique_ = function assertUnique_ (elem, opt_except) {\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  };\n\n  return Collection;\n}(BaseObject));\n\n\nexport default Collection;\n\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /*@__PURE__*/(function (Event) {\n  function MapEvent(type, map, opt_frameState) {\n\n    Event.call(this, type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n  }\n\n  if ( Event ) MapEvent.__proto__ = Event;\n  MapEvent.prototype = Object.create( Event && Event.prototype );\n  MapEvent.prototype.constructor = MapEvent;\n\n  return MapEvent;\n}(Event));\n\nexport default MapEvent;\n\n//# sourceMappingURL=MapEvent.js.map","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /*@__PURE__*/(function (MapEvent) {\n  function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    MapEvent.call(this, type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {import(\"./pixel.js\").Pixel}\n     * @api\n     */\n    this.pixel = map.getEventPixel(browserEvent);\n\n    /**\n     * The coordinate in view projection corresponding to the original browser event.\n     * @type {import(\"./coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  if ( MapEvent ) MapBrowserEvent.__proto__ = MapEvent;\n  MapBrowserEvent.prototype = Object.create( MapEvent && MapEvent.prototype );\n  MapBrowserEvent.prototype.constructor = MapBrowserEvent;\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.preventDefault = function preventDefault () {\n    MapEvent.prototype.preventDefault.call(this);\n    this.originalEvent.preventDefault();\n  };\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.stopPropagation = function stopPropagation () {\n    MapEvent.prototype.stopPropagation.call(this);\n    this.originalEvent.stopPropagation();\n  };\n\n  return MapBrowserEvent;\n}(MapEvent));\n\n\nexport default MapBrowserEvent;\n\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/has\n */\n\nvar ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport var CANVAS_LINE_DASH = function() {\n  var has = false;\n  try {\n    has = !!document.createElement('canvas').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n\n//# sourceMappingURL=has.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nvar MapBrowserPointerEvent = /*@__PURE__*/(function (MapBrowserEvent) {\n  function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n\n    MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState);\n\n    /**\n     * @const\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     */\n    this.pointerEvent = pointerEvent;\n\n  }\n\n  if ( MapBrowserEvent ) MapBrowserPointerEvent.__proto__ = MapBrowserEvent;\n  MapBrowserPointerEvent.prototype = Object.create( MapBrowserEvent && MapBrowserEvent.prototype );\n  MapBrowserPointerEvent.prototype.constructor = MapBrowserPointerEvent;\n\n  return MapBrowserPointerEvent;\n}(MapBrowserEvent));\n\nexport default MapBrowserPointerEvent;\n\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/EventSource\n */\n\nvar EventSource = function EventSource(dispatcher, mapping) {\n\n  /**\n   * @type {import(\"./PointerEventHandler.js\").default}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n/**\n * List of events supported by this source.\n * @return {Array<string>} Event names\n */\nEventSource.prototype.getEvents = function getEvents () {\n  return Object.keys(this.mapping_);\n};\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function getHandlerForEvent (eventType) {\n  return this.mapping_[eventType];\n};\n\nexport default EventSource;\n\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      var e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\n\n\nvar MouseSource = /*@__PURE__*/(function (EventSource) {\n  function MouseSource(dispatcher) {\n    var mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {Array<import(\"../pixel.js\").Pixel>}\n     */\n    this.lastTouches = [];\n  }\n\n  if ( EventSource ) MouseSource.__proto__ = EventSource;\n  MouseSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MouseSource.prototype.constructor = MouseSource;\n\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n  MouseSource.prototype.isEventSimulatedFromTouch_ = function isEventSimulatedFromTouch_ (inEvent) {\n    var lts = this.lastTouches;\n    var x = inEvent.clientX;\n    var y = inEvent.clientY;\n    for (var i = 0, l = lts.length, t = (void 0); i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      var dx = Math.abs(x - t[0]);\n      var dy = Math.abs(y - t[1]);\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n  MouseSource.prototype.cancel = function cancel (inEvent) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  };\n\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n  MouseSource.prototype.cleanupMouse = function cleanupMouse () {\n    delete this.pointerMap[POINTER_ID.toString()];\n  };\n\n  return MouseSource;\n}(EventSource));\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n  var e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  var pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\nexport default MouseSource;\n\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n}\n\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n}\n\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n}\n\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n}\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\nvar MsSource = /*@__PURE__*/(function (EventSource) {\n  function MsSource(dispatcher) {\n    var mapping = {\n      'MSPointerDown': msPointerDown,\n      'MSPointerMove': msPointerMove,\n      'MSPointerUp': msPointerUp,\n      'MSPointerOut': msPointerOut,\n      'MSPointerOver': msPointerOver,\n      'MSPointerCancel': msPointerCancel,\n      'MSGotPointerCapture': msGotPointerCapture,\n      'MSLostPointerCapture': msLostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, MSPointerEvent|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n  }\n\n  if ( EventSource ) MsSource.__proto__ = EventSource;\n  MsSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MsSource.prototype.constructor = MsSource;\n\n  /**\n   * Creates a copy of the original event that will be used\n   * for the fake pointer event.\n   *\n   * @private\n   * @param {MSPointerEvent} inEvent The in event.\n   * @return {Object} The copied event.\n   */\n  MsSource.prototype.prepareEvent_ = function prepareEvent_ (inEvent) {\n    /** @type {MSPointerEvent|Object} */\n    var e = inEvent;\n    if (typeof inEvent.pointerType === 'number') {\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\n    }\n\n    return e;\n  };\n\n  /**\n   * Remove this pointer from the list of active pointers.\n   * @param {number} pointerId Pointer identifier.\n   */\n  MsSource.prototype.cleanup = function cleanup (pointerId) {\n    delete this.pointerMap[pointerId.toString()];\n  };\n\n  return MsSource;\n}(EventSource));\n\nexport default MsSource;\n\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\nvar NativeSource = /*@__PURE__*/(function (EventSource) {\n  function NativeSource(dispatcher) {\n    var mapping = {\n      'pointerdown': pointerDown,\n      'pointermove': pointerMove,\n      'pointerup': pointerUp,\n      'pointerout': pointerOut,\n      'pointerover': pointerOver,\n      'pointercancel': pointerCancel,\n      'gotpointercapture': gotPointerCapture,\n      'lostpointercapture': lostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n  }\n\n  if ( EventSource ) NativeSource.__proto__ = EventSource;\n  NativeSource.prototype = Object.create( EventSource && EventSource.prototype );\n  NativeSource.prototype.constructor = NativeSource;\n\n  return NativeSource;\n}(EventSource));\n\nexport default NativeSource;\n\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _Event from '../events/Event.js';\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\n\n\nvar PointerEvent = /*@__PURE__*/(function (_Event) {\n  function PointerEvent(type, originalEvent, opt_eventDict) {\n    _Event.call(this, type);\n\n    /**\n     * @const\n     * @type {Event}\n     */\n    this.originalEvent = originalEvent;\n\n    var eventDict = opt_eventDict ? opt_eventDict : {};\n\n    /**\n     * @type {number}\n     */\n    this.buttons = getButtons(eventDict);\n\n    /**\n     * @type {number}\n     */\n    this.pressure = getPressure(eventDict, this.buttons);\n\n    // MouseEvent related properties\n\n    /**\n     * @type {boolean}\n     */\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n    /**\n     * @type {Object}\n     */\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n    /**\n     * @type {number}\n     */\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n    /**\n     * @type {Node}\n     */\n    this.relatedTarget = 'relatedTarget' in eventDict ?\n      eventDict['relatedTarget'] : null;\n\n    // PointerEvent related properties\n\n    /**\n     * @const\n     * @type {number}\n     */\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n    /**\n     * @type {string}\n     */\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n    /**\n     * @type {number}\n     */\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n    // keep the semantics of preventDefault\n    if (originalEvent.preventDefault) {\n      this.preventDefault = function() {\n        originalEvent.preventDefault();\n      };\n    }\n  }\n\n  if ( _Event ) PointerEvent.__proto__ = _Event;\n  PointerEvent.prototype = Object.create( _Event && _Event.prototype );\n  PointerEvent.prototype.constructor = PointerEvent;\n\n  return PointerEvent;\n}(_Event));\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  var buttons;\n  if (eventDict.buttons || HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n}\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  var pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n}\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    var ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\n\nexport default PointerEvent;\n\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  var n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n  for (var i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  var len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  var index;\n  var found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  var compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n\n//# sourceMappingURL=array.js.map","/**\n * @module ol/pointer/TouchSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {remove} from '../array.js';\nimport EventSource from './EventSource.js';\nimport {POINTER_ID} from './MouseSource.js';\n\n\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n}\n\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n  this.processTouches_(inEvent, this.moveOverOut_);\n}\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n}\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n}\n\n\nvar TouchSource = /*@__PURE__*/(function (EventSource) {\n  function TouchSource(dispatcher, mouseSource) {\n    var mapping = {\n      'touchstart': touchstart,\n      'touchmove': touchmove,\n      'touchend': touchend,\n      'touchcancel': touchcancel\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {import(\"./MouseSource.js\").default}\n     */\n    this.mouseSource = mouseSource;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.firstTouchId_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clickCount_ = 0;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.resetId_;\n\n    /**\n     * Mouse event timeout: This should be long enough to\n     * ignore compat mouse events made by touch.\n     * @private\n     * @type {number}\n     */\n    this.dedupTimeout_ = 2500;\n  }\n\n  if ( EventSource ) TouchSource.__proto__ = EventSource;\n  TouchSource.prototype = Object.create( EventSource && EventSource.prototype );\n  TouchSource.prototype.constructor = TouchSource;\n\n  /**\n   * @private\n   * @param {Touch} inTouch The in touch.\n   * @return {boolean} True, if this is the primary touch.\n   */\n  TouchSource.prototype.isPrimaryTouch_ = function isPrimaryTouch_ (inTouch) {\n    return this.firstTouchId_ === inTouch.identifier;\n  };\n\n  /**\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\n   * @param {Touch} inTouch The in touch.\n   * @private\n   */\n  TouchSource.prototype.setPrimaryTouch_ = function setPrimaryTouch_ (inTouch) {\n    var count = Object.keys(this.pointerMap).length;\n    if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n      this.firstTouchId_ = inTouch.identifier;\n      this.cancelResetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.removePrimaryPointer_ = function removePrimaryPointer_ (inPointer) {\n    if (inPointer.isPrimary) {\n      this.firstTouchId_ = undefined;\n      this.resetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCount_ = function resetClickCount_ () {\n    this.resetId_ = setTimeout(\n      this.resetClickCountHandler_.bind(this),\n      CLICK_COUNT_TIMEOUT);\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCountHandler_ = function resetClickCountHandler_ () {\n    this.clickCount_ = 0;\n    this.resetId_ = undefined;\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.cancelResetClickCount_ = function cancelResetClickCount_ () {\n    if (this.resetId_ !== undefined) {\n      clearTimeout(this.resetId_);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent Browser event\n   * @param {Touch} inTouch Touch event\n   * @return {PointerEvent} A pointer object.\n   */\n  TouchSource.prototype.touchToPointer_ = function touchToPointer_ (browserEvent, inTouch) {\n    var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n    // Spec specifies that pointerId 1 is reserved for Mouse.\n    // Touch identifiers can start at 0.\n    // Add 2 to the touch identifier for compatibility.\n    e.pointerId = inTouch.identifier + 2;\n    // TODO: check if this is necessary?\n    //e.target = findTarget(e);\n    e.bubbles = true;\n    e.cancelable = true;\n    e.detail = this.clickCount_;\n    e.button = 0;\n    e.buttons = 1;\n    e.width = inTouch.radiusX || 0;\n    e.height = inTouch.radiusY || 0;\n    e.pressure = inTouch.force || 0.5;\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\n    e.pointerType = POINTER_TYPE;\n\n    // make sure that the properties that are different for\n    // each `Touch` object are not copied from the BrowserEvent object\n    e.clientX = inTouch.clientX;\n    e.clientY = inTouch.clientY;\n    e.screenX = inTouch.screenX;\n    e.screenY = inTouch.screenY;\n\n    return e;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} inEvent Touch event\n   * @param {function(TouchEvent, PointerEvent)} inFunction In function.\n   */\n  TouchSource.prototype.processTouches_ = function processTouches_ (inEvent, inFunction) {\n    var touches = Array.prototype.slice.call(inEvent.changedTouches);\n    var count = touches.length;\n    function preventDefault() {\n      inEvent.preventDefault();\n    }\n    for (var i = 0; i < count; ++i) {\n      var pointer = this.touchToPointer_(inEvent, touches[i]);\n      // forward touch preventDefaults\n      pointer.preventDefault = preventDefault;\n      inFunction.call(this, inEvent, pointer);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchList} touchList The touch list.\n   * @param {number} searchId Search identifier.\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\n   */\n  TouchSource.prototype.findTouch_ = function findTouch_ (touchList, searchId) {\n    var l = touchList.length;\n    for (var i = 0; i < l; i++) {\n      var touch = touchList[i];\n      if (touch.identifier === searchId) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * In some instances, a touchstart can happen without a touchend. This\n   * leaves the pointermap in a broken state.\n   * Therefore, on every touchstart, we remove the touches that did not fire a\n   * touchend event.\n   * To keep state globally consistent, we fire a pointercancel for\n   * this \"abandoned\" touch\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.vacuumTouches_ = function vacuumTouches_ (inEvent) {\n    var touchList = inEvent.touches;\n    // pointerMap.getCount() should be < touchList.length here,\n    // as the touchstart has not been processed yet.\n    var keys = Object.keys(this.pointerMap);\n    var count = keys.length;\n    if (count >= touchList.length) {\n      var d = [];\n      for (var i = 0; i < count; ++i) {\n        var key = Number(keys[i]);\n        var value = this.pointerMap[key];\n        // Never remove pointerId == 1, which is mouse.\n        // Touch identifiers are 2 smaller than their pointerId, which is the\n        // index in pointermap.\n        if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n          d.push(value.out);\n        }\n      }\n      for (var i$1 = 0; i$1 < d.length; ++i$1) {\n        this.cancelOut_(inEvent, d[i$1]);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.overDown_ = function overDown_ (browserEvent, inPointer) {\n    this.pointerMap[inPointer.pointerId] = {\n      target: inPointer.target,\n      out: inPointer,\n      outTarget: inPointer.target\n    };\n    this.dispatcher.over(inPointer, browserEvent);\n    this.dispatcher.enter(inPointer, browserEvent);\n    this.dispatcher.down(inPointer, browserEvent);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.moveOverOut_ = function moveOverOut_ (browserEvent, inPointer) {\n    var event = inPointer;\n    var pointer = this.pointerMap[event.pointerId];\n    // a finger drifted off the screen, ignore it\n    if (!pointer) {\n      return;\n    }\n    var outEvent = pointer.out;\n    var outTarget = pointer.outTarget;\n    this.dispatcher.move(event, browserEvent);\n    if (outEvent && outTarget !== event.target) {\n      outEvent.relatedTarget = event.target;\n      /** @type {Object} */ (event).relatedTarget = outTarget;\n      // recover from retargeting by shadow\n      outEvent.target = outTarget;\n      if (event.target) {\n        this.dispatcher.leaveOut(outEvent, browserEvent);\n        this.dispatcher.enterOver(event, browserEvent);\n      } else {\n        // clean up case when finger leaves the screen\n        /** @type {Object} */ (event).target = outTarget;\n        /** @type {Object} */ (event).relatedTarget = null;\n        this.cancelOut_(browserEvent, event);\n      }\n    }\n    pointer.out = event;\n    pointer.outTarget = event.target;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent An event.\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.upOut_ = function upOut_ (browserEvent, inPointer) {\n    this.dispatcher.up(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.cancelOut_ = function cancelOut_ (browserEvent, inPointer) {\n    this.dispatcher.cancel(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.cleanUpPointer_ = function cleanUpPointer_ (inPointer) {\n    delete this.pointerMap[inPointer.pointerId];\n    this.removePrimaryPointer_(inPointer);\n  };\n\n  /**\n   * Prevent synth mouse events from creating pointer events.\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.dedupSynthMouse_ = function dedupSynthMouse_ (inEvent) {\n    var lts = this.mouseSource.lastTouches;\n    var t = inEvent.changedTouches[0];\n    // only the primary finger will synth mouse events\n    if (this.isPrimaryTouch_(t)) {\n      // remember x/y of last touch\n      var lt = [t.clientX, t.clientY];\n      lts.push(lt);\n\n      setTimeout(function() {\n        // remove touch after timeout\n        remove(lts, lt);\n      }, this.dedupTimeout_);\n    }\n  };\n\n  return TouchSource;\n}(EventSource));\n\nexport default TouchSource;\n\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, {prepareEvent as prepareMouseEvent} from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\nvar PointerEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function PointerEventHandler(element) {\n    EventTarget.call(this);\n\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n    this.element_ = element;\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = {};\n\n    /**\n     * @type {Object<string, function(Event)>}\n     * @private\n     */\n    this.eventMap_ = {};\n\n    /**\n     * @type {Array<import(\"./EventSource.js\").default>}\n     * @private\n     */\n    this.eventSourceList_ = [];\n\n    this.registerSources();\n  }\n\n  if ( EventTarget ) PointerEventHandler.__proto__ = EventTarget;\n  PointerEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  PointerEventHandler.prototype.constructor = PointerEventHandler;\n\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n  PointerEventHandler.prototype.registerSources = function registerSources () {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      var mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    }\n\n    // register events on the viewport element\n    this.register_();\n  };\n\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {import(\"./EventSource.js\").default} source The source event.\n   */\n  PointerEventHandler.prototype.registerSource = function registerSource (name, source) {\n    var s = source;\n    var newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function(e) {\n        var handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  };\n\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n  PointerEventHandler.prototype.register_ = function register_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.addEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Remove all registered events.\n   * @private\n   */\n  PointerEventHandler.prototype.unregister_ = function unregister_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.removeEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n  PointerEventHandler.prototype.eventHandler_ = function eventHandler_ (inEvent) {\n    var type = inEvent.type;\n    var handler = this.eventMap_[type];\n    if (handler) {\n      handler(inEvent);\n    }\n  };\n\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.addEvents_ = function addEvents_ (events) {\n    events.forEach(function(eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.removeEvents_ = function removeEvents_ (events) {\n    events.forEach(function(e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n  PointerEventHandler.prototype.cloneEvent = function cloneEvent (event, inEvent) {\n    var eventCopy = {};\n    for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      var p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  };\n\n  // EVENTS\n\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.down = function down (data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  };\n\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.move = function move (data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.up = function up (data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enter = function enter (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leave = function leave (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.over = function over (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.out = function out (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  };\n\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.cancel = function cancel (data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  };\n\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leaveOut = function leaveOut (data, event) {\n    this.out(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  };\n\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enterOver = function enterOver (data, event) {\n    this.over(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n  PointerEventHandler.prototype.contains_ = function contains_ (container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n    return container.contains(contained);\n  };\n\n  // EVENT CREATION AND TRACKING\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {PointerEvent} A PointerEvent of type `inType`.\n   */\n  PointerEventHandler.prototype.makeEvent = function makeEvent (inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  };\n\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.fireEvent = function fireEvent (inType, data, event) {\n    var e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n  PointerEventHandler.prototype.fireNativeEvent = function fireNativeEvent (event) {\n    var e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {PointerEvent} The wrapped event.\n   */\n  PointerEventHandler.prototype.wrapMouseEvent = function wrapMouseEvent (eventType, event) {\n    var pointerEvent = this.makeEvent(\n      eventType, prepareMouseEvent(event, this), event);\n    return pointerEvent;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PointerEventHandler.prototype.disposeInternal = function disposeInternal () {\n    this.unregister_();\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return PointerEventHandler;\n}(EventTarget));\n\nexport default PointerEventHandler;\n\n//# sourceMappingURL=PointerEventHandler.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\nvar MapBrowserEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function MapBrowserEventHandler(map, moveTolerance) {\n\n    EventTarget.call(this);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance ?\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     * @private\n     */\n    this.down_ = null;\n\n    var element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * Event handler which generates pointer events for\n     * the viewport element.\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.pointerEventHandler_ = new PointerEventHandler(element);\n\n    /**\n     * Event handler which generates pointer events for\n     * the document (used when dragging).\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.documentPointerEventHandler_ = null;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_, this);\n\n  }\n\n  if ( EventTarget ) MapBrowserEventHandler.__proto__ = EventTarget;\n  MapBrowserEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  MapBrowserEventHandler.prototype.constructor = MapBrowserEventHandler;\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.emulateClick_ = function emulateClick_ (pointerEvent) {\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(function() {\n        this.clickTimeoutId_ = undefined;\n        var newEvent = new MapBrowserPointerEvent(\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  };\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.updateActivePointers_ = function updateActivePointers_ (pointerEvent) {\n    var event = pointerEvent;\n\n    if (event.type == MapBrowserEventType.POINTERUP ||\n        event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerUp_ = function handlePointerUp_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMouseActionButton_ = function isMouseActionButton_ (pointerEvent) {\n    return pointerEvent.button === 0;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerDown_ = function handlePointerDown_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      /* Set up a pointer event handler on the `document`,\n       * which is required when the pointer is moved outside\n       * the viewport when dragging.\n       */\n      this.documentPointerEventHandler_ =\n          new PointerEventHandler(document);\n\n      this.dragListenerKeys_.push(\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_, this),\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERUP,\n          this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(this.pointerEventHandler_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_, this)\n      );\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerMove_ = function handlePointerMove_ (pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      var newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n      this.dispatchEvent(newEvent);\n    }\n\n    // Some native android browser triggers mousemove events during small period\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n    // https://code.google.com/p/android/issues/detail?id=19827\n    // ex: Galaxy Tab P3110 + Android 4.1.1\n    pointerEvent.preventDefault();\n  };\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.relayEvent_ = function relayEvent_ (pointerEvent) {\n    var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserPointerEvent(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMoving_ = function isMoving_ (pointerEvent) {\n    return this.dragging_ ||\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MapBrowserEventHandler.prototype.disposeInternal = function disposeInternal () {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    if (this.documentPointerEventHandler_) {\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n    if (this.pointerEventHandler_) {\n      this.pointerEventHandler_.dispose();\n      this.pointerEventHandler_ = null;\n    }\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return MapBrowserEventHandler;\n}(EventTarget));\n\n\nexport default MapBrowserEventHandler;\n\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render',\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = function PriorityQueue(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function clear$1 () {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function dequeue () {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  var elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function enqueue (element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  var priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function getCount () {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function getLeftChildIndex_ (index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function getRightChildIndex_ (index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function getParentIndex_ (index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function heapify_ () {\n  var i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function isKeyQueued (key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function isQueued (element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function siftUp_ (index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var count = elements.length;\n  var element = elements[index];\n  var priority = priorities[index];\n  var startIndex = index;\n\n  while (index < (count >> 1)) {\n    var lIndex = this.getLeftChildIndex_(index);\n    var rIndex = this.getRightChildIndex_(index);\n\n    var smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function siftDown_ (startIndex, index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[index];\n  var priority = priorities[index];\n\n  while (index > startIndex) {\n    var parentIndex = this.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function reprioritize () {\n  var priorityFunction = this.priorityFunction_;\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var index = 0;\n  var n = elements.length;\n  var element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this.queuedElements_[this.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\n\n\nexport default PriorityQueue;\n\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\n\nvar TileQueue = /*@__PURE__*/(function (PriorityQueue) {\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n\n    PriorityQueue.call(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      this, function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (/** @type {import(\"./Tile.js\").default} */ (element[0]).getKey());\n      });\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n\n  }\n\n  if ( PriorityQueue ) TileQueue.__proto__ = PriorityQueue;\n  TileQueue.prototype = Object.create( PriorityQueue && PriorityQueue.prototype );\n  TileQueue.prototype.constructor = TileQueue;\n\n  /**\n   * @inheritDoc\n   */\n  TileQueue.prototype.enqueue = function enqueue (element) {\n    var added = PriorityQueue.prototype.enqueue.call(this, element);\n    if (added) {\n      var tile = element[0];\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\n    }\n    return added;\n  };\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  TileQueue.prototype.getTilesLoading = function getTilesLoading () {\n    return this.tilesLoading_;\n  };\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  TileQueue.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    var state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR ||\n        state === TileState.EMPTY || state === TileState.ABORT) {\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n      var tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  };\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  TileQueue.prototype.loadMoreTiles = function loadMoreTiles (maxTotalLoading, maxNewLoads) {\n    var newLoads = 0;\n    var abortedTiles = false;\n    var state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n           this.getCount() > 0) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.ABORT) {\n        abortedTiles = true;\n      } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n    if (newLoads === 0 && abortedTiles) {\n      // Do not stop the render loop when all wanted tiles were aborted due to\n      // a small, saturated tile cache.\n      this.tileChangeCallback_();\n    }\n  };\n\n  return TileQueue;\n}(PriorityQueue));\n\n\nexport default TileQueue;\n\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  var cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      var y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  var n = mat.length;\n\n  for (var i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    var maxRow = i;\n    var maxEl = Math.abs(mat[i][i]);\n    for (var r = i + 1; r < n; r++) {\n      var absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    var tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (var j = i + 1; j < n; j++) {\n      var coef = -mat[j][i] / mat[i][i];\n      for (var k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  var x = new Array(n);\n  for (var l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (var m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  var r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n//# sourceMappingURL=math.js.map","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined)): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @return {Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        var index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          var power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var offset = -direction / 2 + 0.5;\n        var oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        var newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  var r = circle.getRadius();\n  var center = circle.getCenter();\n  var x0 = center[0];\n  var y0 = center[1];\n  var x1 = coordinate[0];\n  var y1 = coordinate[1];\n\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  var d = Math.sqrt(dx * dx + dy * dy);\n\n  var x = x0 + r * dx / d;\n  var y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  var x0 = coordinate[0];\n  var y0 = coordinate[1];\n  var start = segment[0];\n  var end = segment[1];\n  var x1 = start[0];\n  var y1 = start[1];\n  var x2 = end[0];\n  var y2 = end[1];\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  var x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  var x = Math.abs(3600 * normalizedDegrees);\n  var dflPrecision = opt_fractionDigits || 0;\n  var precision = Math.pow(10, dflPrecision);\n\n  var deg = Math.floor(x / 3600);\n  var min = Math.floor((x - deg * 3600) / 60);\n  var sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  var equals = true;\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  var cosAngle = Math.cos(angle);\n  var sinAngle = Math.sin(angle);\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  var dx = coord1[0] - coord2[0];\n  var dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lat2 = toRadians(c2[1]);\n  var deltaLatBy2 = (lat2 - lat1) / 2;\n  var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  var length = 0;\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var length = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  var area = 0;\n  var len = coordinates.length;\n  var x1 = coordinates[len - 1][0];\n  var y1 = coordinates[len - 1][1];\n  for (var i = 0; i < len; i++) {\n    var x2 = coordinates[i][0];\n    var y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var area = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lon1 = toRadians(c1[0]);\n  var dByR = distance / radius;\n  var lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  var lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = function Projection(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {import(\"./Units.js\").default}\n   */\n  this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {import(\"../tilegrid/TileGrid.js\").default}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function canWrapX () {\n  return this.canWrapX_;\n};\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function getCode () {\n  return this.code_;\n};\n\n/**\n * Get the validity extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the units of this projection.\n * @return {import(\"./Units.js\").default} Units.\n * @api\n */\nProjection.prototype.getUnits = function getUnits () {\n  return this.units_;\n};\n\n/**\n * Get the amount of meters per unit of this projection.If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function getMetersPerUnit () {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n/**\n * Get the world extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function getWorldExtent () {\n  return this.worldExtent_;\n};\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *   or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *   \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function getAxisOrientation () {\n  return this.axisOrientation_;\n};\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function isGlobal () {\n  return this.global_;\n};\n\n/**\n * Set if the projection is a global projection which spans the whole world\n * @param {boolean} global Whether the projection is global.\n * @api\n */\nProjection.prototype.setGlobal = function setGlobal (global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n/**\n * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function getDefaultTileGrid () {\n  return this.defaultTileGrid_;\n};\n\n/**\n * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function setDefaultTileGrid (tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n/**\n * Set the validity extent for this projection.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function setExtent (extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n/**\n * Set the world extent for this projection.\n * @param {import(\"../extent.js\").Extent} worldExtent World extent\n *   [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function setWorldExtent (worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function setGetPointResolution (func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function getPointResolutionFunc () {\n  return this.getPointResolutionFunc_;\n};\n\nexport default Projection;\n\n//# sourceMappingURL=Projection.js.map","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG3857Projection(code) {\n    Projection.call(this, {\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n  if ( Projection ) EPSG3857Projection.__proto__ = Projection;\n  EPSG3857Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG3857Projection.prototype.constructor = EPSG3857Projection;\n\n  return EPSG3857Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  var halfSize = HALF_SIZE;\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    var y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n\n//# sourceMappingURL=epsg3857.js.map","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG4326Projection(code, opt_axisOrientation) {\n    Projection.call(this, {\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n  if ( Projection ) EPSG4326Projection.__proto__ = Projection;\n  EPSG4326Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\n\n  return EPSG4326Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  var transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  var output;\n  if (opt_output !== undefined) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string' ?\n    projections.get(/** @type {string} */ (projectionLike)) :\n    (/** @type {Projection} */ (projectionLike) || null);\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  var pointResolution;\n  var getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    var units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      var toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      var vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      var metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      var length = input.length;\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      var output = opt_output !== undefined ? opt_output : new Array(length);\n      for (var i = 0; i < length; i += dimension) {\n        var point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (var j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  var sourceProj = get(source);\n  var destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  var lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  var lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    var transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  var sourceCode = sourceProjection.getCode();\n  var destinationCode = destinationProjection.getCode();\n  var transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  var sourceProjection = get(source);\n  var destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  var a1 = transform1[0];\n  var b1 = transform1[1];\n  var c1 = transform1[2];\n  var d1 = transform1[3];\n  var e1 = transform1[4];\n  var f1 = transform1[5];\n  var a2 = transform2[0];\n  var b2 = transform2[1];\n  var c2 = transform2[2];\n  var d2 = transform2[3];\n  var e2 = transform2[4];\n  var f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  var sin = Math.sin(angle);\n  var cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  var det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  var a = transform[0];\n  var b = transform[1];\n  var c = transform[2];\n  var d = transform[3];\n  var e = transform[4];\n  var f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/geom/Geometry\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {transform2D} from './flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /*@__PURE__*/(function (BaseObject) {\n  function Geometry() {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object<string, Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  if ( BaseObject ) Geometry.__proto__ = BaseObject;\n  Geometry.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geometry.prototype.constructor = Geometry;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  Geometry.prototype.clone = function clone () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  Geometry.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  };\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  Geometry.prototype.containsXY = function containsXY (x, y) {\n    return false;\n  };\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  Geometry.prototype.getClosestPoint = function getClosestPoint (point, opt_closestPoint) {\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  };\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate (coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  Geometry.prototype.computeExtent = function computeExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  Geometry.prototype.getExtent = function getExtent (opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  };\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  Geometry.prototype.rotate = function rotate (angle, anchor) {\n    abstract();\n  };\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  Geometry.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    abstract();\n  };\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  Geometry.prototype.simplify = function simplify (tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  };\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    return abstract();\n  };\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  Geometry.prototype.getType = function getType () {\n    return abstract();\n  };\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n   */\n  Geometry.prototype.applyTransform = function applyTransform (transformFn) {\n    abstract();\n  };\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  Geometry.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {\n    abstract();\n  };\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  Geometry.prototype.transform = function transform (source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    var sourceProj = getProjection(source);\n    var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        var pixelExtent = sourceProj.getExtent();\n        var projectedExtent = sourceProj.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  };\n\n  return Geometry;\n}(BaseObject));\n\n\nexport default Geometry;\n\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from './flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /*@__PURE__*/(function (Geometry) {\n  function SimpleGeometry() {\n\n    Geometry.call(this);\n\n    /**\n     * @protected\n     * @type {GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  if ( Geometry ) SimpleGeometry.__proto__ = Geometry;\n  SimpleGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  };\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates () {\n    return abstract();\n  };\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates () {\n    return this.flatCoordinates;\n  };\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate () {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  };\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {GeometryLayout} Layout.\n   * @api\n   */\n  SimpleGeometry.prototype.getLayout = function getLayout () {\n    return this.layout;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    return this;\n  };\n\n  /**\n   * @return {number} Stride.\n   */\n  SimpleGeometry.prototype.getStride = function getStride () {\n    return this.stride;\n  };\n\n  /**\n   * @param {GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates (layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  };\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    abstract();\n  };\n\n  /**\n   * @param {GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  SimpleGeometry.prototype.setLayout = function setLayout (layout, coordinates, nesting) {\n    /** @type {number} */\n    var stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (var i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.applyTransform = function applyTransform (transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.rotate = function rotate$1 (angle, anchor) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.scale = function scale$1 (sx, opt_sy, opt_anchor) {\n    var sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.translate = function translate$1 (deltaX, deltaY) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  return SimpleGeometry;\n}(Geometry));\n\n\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  var stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (var i$1 = 0; i$1 < stride; ++i$1) {\n    closestPoint[i$1] = flatCoordinates[offset + i$1];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n    for (var j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  var stack = [offset, end - stride];\n  var index = 0;\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n    for (var i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (var i$1 = 0; i$1 < n; ++i$1) {\n    if (markers[i$1]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  var x1 = snap(flatCoordinates[offset], tolerance);\n  var y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  var x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    var x3 = snap(flatCoordinates[offset], tolerance);\n    var y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /*@__PURE__*/(function (SimpleGeometry) {\n  function LinearRing(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LinearRing.__proto__ = SimpleGeometry;\n  LinearRing.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.clone = function clone () {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  LinearRing.prototype.getArea = function getArea () {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LinearRing.prototype.getType = function getType () {\n    return GeometryType.LINEAR_RING;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LinearRing;\n}(SimpleGeometry));\n\n\nexport default LinearRing;\n\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /*@__PURE__*/(function (SimpleGeometry) {\n  function Point(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  if ( SimpleGeometry ) Point.__proto__ = SimpleGeometry;\n  Point.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Point.prototype.constructor = Point;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @override\n   * @api\n   */\n  Point.prototype.clone = function clone () {\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      var stride = this.stride;\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.getType = function getType () {\n    return GeometryType.POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return Point;\n}(SimpleGeometry));\n\n\nexport default Point;\n\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (var i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n\n//# sourceMappingURL=orient.js.map","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function Polygon(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) Polygon.__proto__ = SimpleGeometry;\n  Polygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  Polygon.prototype.appendLinearRing = function appendLinearRing (linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @override\n   * @api\n   */\n  Polygon.prototype.clone = function clone () {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  Polygon.prototype.getArea = function getArea () {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  Polygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  Polygon.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  Polygon.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  };\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  Polygon.prototype.getInteriorPoint = function getInteriorPoint () {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  };\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRingCount = function getLinearRingCount () {\n    return this.ends_.length;\n  };\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  Polygon.prototype.getLinearRing = function getLinearRing (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRings = function getLinearRings () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var linearRings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  Polygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.getType = function getType () {\n    return GeometryType.POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  Polygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return Polygon;\n}(SimpleGeometry));\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  var flatCoordinates = [];\n  for (var i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var center = circle.getCenter();\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (var j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  var ends = [flatCoordinates.length];\n  var polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var stride = polygon.getStride();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  for (var i = 0; i <= sides; ++i) {\n    var offset = i * stride;\n    var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid} from './util.js';\nimport {VOID} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n  * @api\n */\nvar View = /*@__PURE__*/(function (BaseObject) {\n  function View(opt_options) {\n    BaseObject.call(this);\n\n    var options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    this.applyOptions_(options);\n  }\n\n  if ( BaseObject ) View.__proto__ = BaseObject;\n  View.prototype = Object.create( BaseObject && BaseObject.prototype );\n  View.prototype.constructor = View;\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  View.prototype.applyOptions_ = function applyOptions_ (options) {\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = {};\n    properties[ViewProperty.CENTER] = options.center !== undefined ?\n      options.center : null;\n\n    var resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    var centerConstraint = createCenterConstraint(options);\n    var resolutionConstraint = resolutionConstraintInfo.constraint;\n    var rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    if (options.resolution !== undefined) {\n      properties[ViewProperty.RESOLUTION] = options.resolution;\n    } else if (options.zoom !== undefined) {\n      properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_);\n\n      if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n        properties[ViewProperty.RESOLUTION] = clamp(\n          Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n          this.minResolution_, this.maxResolution_);\n      }\n    }\n    properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n\n  };\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  View.prototype.getUpdatedOptions_ = function getUpdatedOptions_ (newOptions) {\n    var options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenter();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  };\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean))} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  View.prototype.animate = function animate (var_args) {\n    var arguments$1 = arguments;\n\n    var animationCount = arguments.length;\n    var callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      var state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenter(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    var start = Date.now();\n    var center = this.getCenter().slice();\n    var resolution = this.getResolution();\n    var rotation = this.getRotation();\n    var series = [];\n    for (var i = 0; i < animationCount; ++i) {\n      var options = /** @type {AnimationOptions} */ (arguments$1[i]);\n\n      var animation = /** @type {Animation} */ ({\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut\n      });\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center;\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.constrainResolution(\n          this.maxResolution_, options.zoom - this.minZoom_, 0);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      animation.callback = callback;\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  };\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  View.prototype.getAnimating = function getAnimating () {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  };\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  View.prototype.getInteracting = function getInteracting () {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  };\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  View.prototype.cancelAnimations = function cancelAnimations () {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n      var series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n    }\n    this.animations_.length = 0;\n  };\n\n  /**\n   * Update all animations.\n   */\n  View.prototype.updateAnimations_ = function updateAnimations_ () {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    var now = Date.now();\n    var more = false;\n    for (var i = this.animations_.length - 1; i >= 0; --i) {\n      var series = this.animations_[i];\n      var seriesComplete = true;\n      for (var j = 0, jj = series.length; j < jj; ++j) {\n        var animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        var elapsed = now - animation.start;\n        var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        var progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          var x0 = animation.sourceCenter[0];\n          var y0 = animation.sourceCenter[1];\n          var x1 = animation.targetCenter[0];\n          var y1 = animation.targetCenter[1];\n          var x = x0 + progress * (x1 - x0);\n          var y = y0 + progress * (y1 - y0);\n          this.set(ViewProperty.CENTER, [x, y]);\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          var resolution = progress === 1 ?\n            animation.targetResolution :\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterZoom(resolution, animation.anchor));\n          }\n          this.set(ViewProperty.RESOLUTION, resolution);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          var rotation = progress === 1 ?\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterRotate(rotation, animation.anchor));\n          }\n          this.set(ViewProperty.ROTATION, rotation);\n        }\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        var callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  View.prototype.calculateCenterRotate = function calculateCenterRotate (rotation, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  };\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  View.prototype.calculateCenterZoom = function calculateCenterZoom (resolution, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    var currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  };\n\n  /**\n   * @private\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  View.prototype.getSizeFromViewport_ = function getSizeFromViewport_ () {\n    var size = [100, 100];\n    var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n    var element = document.querySelector(selector);\n    if (element) {\n      var metrics = getComputedStyle(element);\n      size[0] = parseInt(metrics.width, 10);\n      size[1] = parseInt(metrics.height, 10);\n    }\n    return size;\n  };\n\n  /**\n   * Get the constrained center of this view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Constrained center.\n   * @api\n   */\n  View.prototype.constrainCenter = function constrainCenter (center) {\n    return this.constraints_.center(center);\n  };\n\n  /**\n   * Get the constrained resolution of this view.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @param {number=} opt_direction Direction. Default is `0`.\n   * @return {number|undefined} Constrained resolution.\n   * @api\n   */\n  View.prototype.constrainResolution = function constrainResolution (resolution, opt_delta, opt_direction) {\n    var delta = opt_delta || 0;\n    var direction = opt_direction || 0;\n    return this.constraints_.resolution(resolution, delta, direction);\n  };\n\n  /**\n   * Get the constrained rotation of this view.\n   * @param {number|undefined} rotation Rotation.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @return {number|undefined} Constrained rotation.\n   * @api\n   */\n  View.prototype.constrainRotation = function constrainRotation (rotation, opt_delta) {\n    var delta = opt_delta || 0;\n    return this.constraints_.rotation(rotation, delta);\n  };\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getCenter = function getCenter () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n    );\n  };\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  View.prototype.getConstraints = function getConstraints () {\n    return this.constraints_;\n  };\n\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  View.prototype.getHints = function getHints (opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  };\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  View.prototype.calculateExtent = function calculateExtent (opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    assert(center, 1); // The view center is not defined\n    var resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    var rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  };\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  View.prototype.getMaxResolution = function getMaxResolution () {\n    return this.maxResolution_;\n  };\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  View.prototype.getMinResolution = function getMinResolution () {\n    return this.minResolution_;\n  };\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  View.prototype.getMaxZoom = function getMaxZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n  };\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  View.prototype.setMaxZoom = function setMaxZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  };\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  View.prototype.getMinZoom = function getMinZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n  };\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  View.prototype.setMinZoom = function setMinZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  };\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  View.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getResolution = function getResolution () {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  };\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  View.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  View.prototype.getResolutionForExtent = function getResolutionForExtent (extent, opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var xResolution = getWidth(extent) / size[0];\n    var yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  };\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  View.prototype.getResolutionForValueFunction = function getResolutionForValueFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function(value) {\n        var resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      });\n  };\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.getRotation = function getRotation () {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  };\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  View.prototype.getValueForResolutionFunction = function getValueForResolutionFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function(resolution) {\n        var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n        return value;\n      });\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio for center rounding.\n   * @return {State} View state.\n   */\n  View.prototype.getState = function getState (pixelRatio) {\n    var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    var projection = this.getProjection();\n    var resolution = /** @type {number} */ (this.getResolution());\n    var pixelResolution = resolution / pixelRatio;\n    var rotation = this.getRotation();\n    return (\n      /** @type {State} */ ({\n        center: [\n          Math.round(center[0] / pixelResolution) * pixelResolution,\n          Math.round(center[1] / pixelResolution) * pixelResolution\n        ],\n        projection: projection !== undefined ? projection : null,\n        resolution: resolution,\n        rotation: rotation,\n        zoom: this.getZoom()\n      })\n    );\n  };\n\n  /**\n   * Get the current zoom level.  If you configured your view with a resolutions\n   * array (this is rare), this method may return non-integer zoom levels (so\n   * the zoom level is not safe to use as an index into a resolutions array).\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  View.prototype.getZoom = function getZoom () {\n    var zoom;\n    var resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  };\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  View.prototype.getZoomForResolution = function getZoomForResolution (resolution) {\n    var offset = this.minZoom_ || 0;\n    var max, zoomFactor;\n    if (this.resolutions_) {\n      var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  };\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  View.prototype.getResolutionForZoom = function getResolutionForZoom (zoom) {\n    return /** @type {number} */ (this.constrainResolution(\n      this.maxResolution_, zoom - this.minZoom_, 0));\n  };\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions=} opt_options Options.\n   * @api\n   */\n  View.prototype.fit = function fit (geometryOrExtent, opt_options) {\n    var options = opt_options || {};\n    var size = options.size;\n    if (!size) {\n      size = this.getSizeFromViewport_();\n    }\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    var geometry;\n    assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function',\n      24); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n      geometry = polygonFromExtent(geometryOrExtent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      geometryOrExtent = geometryOrExtent.getExtent();\n      geometry = polygonFromExtent(geometryOrExtent);\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n    } else {\n      geometry = geometryOrExtent;\n    }\n\n    var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    var constrainResolution = options.constrainResolution !== undefined ?\n      options.constrainResolution : true;\n    var nearest = options.nearest !== undefined ? options.nearest : false;\n    var minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.constrainResolution(\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n    } else {\n      minResolution = 0;\n    }\n    var coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var minRotX = +Infinity;\n    var minRotY = +Infinity;\n    var maxRotX = -Infinity;\n    var maxRotY = -Infinity;\n    var stride = geometry.getStride();\n    for (var i = 0, ii = coords.length; i < ii; i += stride) {\n      var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    var resolution = this.getResolutionForExtent(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution :\n      Math.max(resolution, minResolution);\n    if (constrainResolution) {\n      var constrainedResolution = this.constrainResolution(resolution, 0, 0);\n      if (!nearest && constrainedResolution < resolution) {\n        constrainedResolution = this.constrainResolution(\n          constrainedResolution, -1, 0);\n      }\n      resolution = constrainedResolution;\n    }\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerRotX = (minRotX + maxRotX) / 2;\n    var centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    var center = [centerX, centerY];\n    var callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animate({\n        resolution: resolution,\n        center: center,\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.setResolution(resolution);\n      this.setCenter(center);\n      animationCallback(callback, true);\n    }\n  };\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  View.prototype.centerOn = function centerOn (coordinate, size, position) {\n    // calculate rotated position\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    var resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenter([centerX, centerY]);\n  };\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  View.prototype.isDef = function isDef () {\n    return !!this.getCenter() && this.getResolution() !== undefined;\n  };\n\n  /**\n   * Rotate the view around a given coordinate.\n   * @param {number} rotation New rotation value for the view.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  View.prototype.rotate = function rotate (rotation, opt_anchor) {\n    if (opt_anchor !== undefined) {\n      var center = this.calculateCenterRotate(rotation, opt_anchor);\n      this.setCenter(center);\n    }\n    this.setRotation(rotation);\n  };\n\n  /**\n   * Set the center of the current view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setCenter = function setCenter (center) {\n    this.set(ViewProperty.CENTER, center);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * @param {ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  View.prototype.setHint = function setHint (hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  };\n\n  /**\n   * Set the resolution for this view.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setResolution = function setResolution (resolution) {\n    this.set(ViewProperty.RESOLUTION, resolution);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Set the rotation for this view.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.setRotation = function setRotation (rotation) {\n    this.set(ViewProperty.ROTATION, rotation);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  View.prototype.setZoom = function setZoom (zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  };\n\n  return View;\n}(BaseObject));\n\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function() {\n    callback(returnValue);\n  }, 0);\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  var resolutionConstraint;\n  var maxResolution;\n  var minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  var defaultMaxZoom = 28;\n  var defaultZoomFactor = 2;\n\n  var minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  var maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  var zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    var resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var extent = projection.getExtent();\n    var size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    var defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  var enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    var constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n\n//# sourceMappingURL=View.js.map","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/layer/Base\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /*@__PURE__*/(function (BaseObject) {\n  function BaseLayer(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = assign({}, options);\n    properties[LayerProperty.OPACITY] =\n       options.opacity !== undefined ? options.opacity : 1;\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n\n    /**\n     * The layer type.\n     * @type {import(\"../LayerType.js\").default}\n     * @protected;\n     */\n    this.type;\n\n  }\n\n  if ( BaseObject ) BaseLayer.__proto__ = BaseObject;\n  BaseLayer.prototype = Object.create( BaseObject && BaseObject.prototype );\n  BaseLayer.prototype.constructor = BaseLayer;\n\n  /**\n   * Get the layer type (used when creating a layer renderer).\n   * @return {import(\"../LayerType.js\").default} The layer type.\n   */\n  BaseLayer.prototype.getType = function getType () {\n    return this.type;\n  };\n\n  /**\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  BaseLayer.prototype.getLayerState = function getLayerState () {\n    /** @type {import(\"./Layer.js\").State} */\n    var state = this.state_ || /** @type {?} */ ({\n      layer: this,\n      managed: true\n    });\n    state.opacity = clamp(this.getOpacity(), 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = this.getZIndex() || 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    this.state_ = state;\n\n    return state;\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  BaseLayer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  BaseLayer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    return abstract();\n  };\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getExtent = function getExtent () {\n    return (\n      /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  };\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMaxResolution = function getMaxResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  };\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMinResolution = function getMinResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  };\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getOpacity = function getOpacity () {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  };\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  BaseLayer.prototype.getSourceState = function getSourceState () {\n    return abstract();\n  };\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getVisible = function getVisible () {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  };\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getZIndex = function getZIndex () {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  };\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setExtent = function setExtent (extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMaxResolution = function setMaxResolution (maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMinResolution = function setMinResolution (minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setOpacity = function setOpacity (opacity) {\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setVisible = function setVisible (visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setZIndex = function setZIndex (zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n\n  return BaseLayer;\n}(BaseObject));\n\n\nexport default BaseLayer;\n\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n\n//# sourceMappingURL=State.js.map","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from './Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /*@__PURE__*/(function (BaseLayer) {\n  function LayerGroup(opt_options) {\n\n    var options = opt_options || {};\n    var baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    var layers = options.layers;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof /** @type {?} */ (layers).getArray === 'function',\n          43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  if ( BaseLayer ) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  LayerGroup.prototype.constructor = LayerGroup;\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_ () {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (var id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n      ];\n    }\n\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    var key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function getLayers () {\n    return (\n      /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS))\n    );\n  };\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function setLayers (layers) {\n    this.set(Property.LAYERS, layers);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n\n    var pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getSourceState = function getSourceState () {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer));\n\n\nexport default LayerGroup;\n\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n\n//# sourceMappingURL=size.js.map","/**\n * @module ol/PluggableMap\n */\nimport {getUid} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Object<string, import(\"./layer/Layer.js\").State>} layerStates\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {Object<string, Object<string, import(\"./TileRange.js\").default>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @fires module:ol/render/Event~RenderEvent#rendercomplete\n * @api\n */\nvar PluggableMap = /*@__PURE__*/(function (BaseObject) {\n  function PluggableMap(options) {\n\n    BaseObject.call(this);\n\n    var optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileAnimating_ =\n        options.loadTilesWhileAnimating !== undefined ?\n          options.loadTilesWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileInteracting_ =\n        options.loadTilesWhileInteracting !== undefined ?\n          options.loadTilesWhileInteracting : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = function() {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_.call(this, Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n    // prevent page zoom on IE >= 10 browsers\n    this.viewport_.style.msTouchAction = 'none';\n    this.viewport_.style.touchAction = 'none';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    var overlayEvents = [\n      EventType.CLICK,\n      EventType.DBLCLICK,\n      EventType.MOUSEDOWN,\n      EventType.TOUCHSTART,\n      EventType.MSPOINTERDOWN,\n      MapBrowserEventType.POINTERDOWN,\n      EventType.MOUSEWHEEL,\n      EventType.WHEEL\n    ];\n    for (var i = 0, ii = overlayEvents.length; i < ii; ++i) {\n      listen(this.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n    }\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n    for (var key in MapBrowserEventType) {\n      listen(this.mapBrowserEventHandler_, MapBrowserEventType[key],\n        this.handleMapBrowserEvent, this);\n    }\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = this.createRenderer();\n\n    /**\n     * @type {function(Event)|undefined}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n    /**\n     * Uids of features to skip at rendering time.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.skippedFeatureUids_ = {};\n\n    listen(\n      this, getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_, this);\n    listen(this, getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_, this);\n    listen(this, getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_, this);\n    listen(this, getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_, this);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      (function(control) {\n        control.setMap(this);\n      }).bind(this));\n\n    listen(this.controls, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.controls, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      (function(interaction) {\n        interaction.setMap(this);\n      }).bind(this));\n\n    listen(this.interactions, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.interactions, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    listen(this.overlays_, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n      }, this);\n\n    listen(this.overlays_, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        var id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }, this);\n\n  }\n\n  if ( BaseObject ) PluggableMap.__proto__ = BaseObject;\n  PluggableMap.prototype = Object.create( BaseObject && BaseObject.prototype );\n  PluggableMap.prototype.constructor = PluggableMap;\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  PluggableMap.prototype.createRenderer = function createRenderer () {\n    throw new Error('Use a map type that has a createRenderer method');\n  };\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  PluggableMap.prototype.addControl = function addControl (control) {\n    this.getControls().push(control);\n  };\n\n  /**\n   * Add the given interaction to the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  PluggableMap.prototype.addInteraction = function addInteraction (interaction) {\n    this.getInteractions().push(interaction);\n  };\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  PluggableMap.prototype.addLayer = function addLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  };\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  PluggableMap.prototype.addOverlay = function addOverlay (overlay) {\n    this.getOverlays().push(overlay);\n  };\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  PluggableMap.prototype.addOverlayInternal_ = function addOverlayInternal_ (overlay) {\n    var id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  };\n\n  /**\n   *\n   * @inheritDoc\n   */\n  PluggableMap.prototype.disposeInternal = function disposeInternal () {\n    this.mapBrowserEventHandler_.dispose();\n    unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n      this.animationDelayKey_ = undefined;\n    }\n    this.setTarget(null);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n   *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachFeatureAtPixel = function forEachFeatureAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = opt_options.layerFilter !== undefined ?\n      opt_options.layerFilter : TRUE;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, callback, null,\n      layerFilter, null);\n  };\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * `null` if none were found.\n   * @api\n   */\n  PluggableMap.prototype.getFeaturesAtPixel = function getFeaturesAtPixel (pixel, opt_options) {\n    var features = null;\n    this.forEachFeatureAtPixel(pixel, function(feature) {\n      if (!features) {\n        features = [];\n      }\n      features.push(feature);\n    }, opt_options);\n    return features;\n  };\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var options = opt_options || /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n  };\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @template U\n   * @api\n   */\n  PluggableMap.prototype.hasFeatureAtPixel = function hasFeatureAtPixel (pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\n  };\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {Event} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  PluggableMap.prototype.getEventCoordinate = function getEventCoordinate (event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  };\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {Event|TouchEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  PluggableMap.prototype.getEventPixel = function getEventPixel (event) {\n    var viewportPosition = this.viewport_.getBoundingClientRect();\n    var eventPosition = 'changedTouches' in event ?\n      /** @type {TouchEvent} */ (event).changedTouches[0] :\n      /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top\n    ];\n  };\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getTarget = function getTarget () {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n  };\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  PluggableMap.prototype.getTargetElement = function getTargetElement () {\n    var target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  PluggableMap.prototype.getCoordinateFromPixel = function getCoordinateFromPixel (pixel) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  };\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  PluggableMap.prototype.getControls = function getControls () {\n    return this.controls;\n  };\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  PluggableMap.prototype.getOverlays = function getOverlays () {\n    return this.overlays_;\n  };\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  PluggableMap.prototype.getOverlayById = function getOverlayById (id) {\n    var overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  };\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  PluggableMap.prototype.getInteractions = function getInteractions () {\n    return this.interactions;\n  };\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getLayerGroup = function getLayerGroup () {\n    return (\n      /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP))\n    );\n  };\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  PluggableMap.prototype.getLayers = function getLayers () {\n    var layers = this.getLayerGroup().getLayers();\n    return layers;\n  };\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.getPixelFromCoordinate = function getPixelFromCoordinate (coordinate) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  };\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  PluggableMap.prototype.getRenderer = function getRenderer () {\n    return this.renderer_;\n  };\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getSize = function getSize () {\n    return (\n      /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE))\n    );\n  };\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getView = function getView () {\n    return (\n      /** @type {View} */ (this.get(MapProperty.VIEW))\n    );\n  };\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  PluggableMap.prototype.getViewport = function getViewport () {\n    return this.viewport_;\n  };\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  PluggableMap.prototype.getOverlayContainer = function getOverlayContainer () {\n    return this.overlayContainer_;\n  };\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  PluggableMap.prototype.getOverlayContainerStopEvent = function getOverlayContainerStopEvent () {\n    return this.overlayContainerStopEvent_;\n  };\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  PluggableMap.prototype.getTilePriority = function getTilePriority (tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    var frameState = this.frameState_;\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n      return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n      return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels\n    // between the center of the tile and the focus.  The factor of 65536 means\n    // that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var deltaX = tileCenter[0] - frameState.focus[0];\n    var deltaY = tileCenter[1] - frameState.focus[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n  };\n\n  /**\n   * @param {Event} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  PluggableMap.prototype.handleBrowserEvent = function handleBrowserEvent (browserEvent, opt_type) {\n    var type = opt_type || browserEvent.type;\n    var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  };\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  PluggableMap.prototype.handleMapBrowserEvent = function handleMapBrowserEvent (mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    this.focus_ = mapBrowserEvent.coordinate;\n    mapBrowserEvent.frameState = this.frameState_;\n    var interactionsArray = this.getInteractions().getArray();\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (var i = interactionsArray.length - 1; i >= 0; i--) {\n        var interaction = interactionsArray[i];\n        if (!interaction.getActive()) {\n          continue;\n        }\n        var cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  PluggableMap.prototype.handlePostRender = function handlePostRender () {\n\n    var frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    var tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      var maxTotalLoading = this.maxTilesLoading_;\n      var maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        var hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING]) {\n          maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n        if (hints[ViewHint.INTERACTING]) {\n          maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n    if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n        !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n      this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n    }\n\n    var postRenderFunctions = this.postRenderFunctions_;\n    for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleSizeChanged_ = function handleSizeChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTargetChanged_ = function handleTargetChanged_ () {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    var targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.keyHandlerKeys_) {\n      for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n    }\n\n    if (!targetElement) {\n      this.renderer_.removeLayerRenderers();\n      removeNode(this.viewport_);\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n\n      var keyboardEventTarget = !this.keyboardEventTarget_ ?\n        targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTileChange_ = function handleTileChange_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewPropertyChanged_ = function handleViewPropertyChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewChanged_ = function handleViewChanged_ () {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    var view = this.getView();\n    if (view) {\n      this.viewport_.setAttribute('data-view', getUid(view));\n      this.viewPropertyListenerKey_ = listen(\n        view, ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(\n        view, EventType.CHANGE,\n        this.handleViewPropertyChanged_, this);\n    }\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleLayerGroupChanged_ = function handleLayerGroupChanged_ () {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    var layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\n          this.render, this),\n        listen(\n          layerGroup, EventType.CHANGE,\n          this.render, this)\n      ];\n    }\n    this.render();\n  };\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  PluggableMap.prototype.isRendered = function isRendered () {\n    return !!this.frameState_;\n  };\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  PluggableMap.prototype.renderSync = function renderSync () {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  };\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  PluggableMap.prototype.render = function render () {\n    if (this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  };\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeControl = function removeControl (control) {\n    return this.getControls().remove(control);\n  };\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeInteraction = function removeInteraction (interaction) {\n    return this.getInteractions().remove(interaction);\n  };\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeLayer = function removeLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  };\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeOverlay = function removeOverlay (overlay) {\n    return this.getOverlays().remove(overlay);\n  };\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  PluggableMap.prototype.renderFrame_ = function renderFrame_ (time) {\n    var viewState;\n\n    var size = this.getSize();\n    var view = this.getView();\n    var extent = createEmpty();\n    var previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    var frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n      var layerStates = {};\n      for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n        layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n      }\n      viewState = view.getState(this.pixelRatio_);\n      frameState = /** @type {FrameState} */ ({\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        extent: extent,\n        focus: this.focus_ ? this.focus_ : viewState.center,\n        index: this.frameIndex_++,\n        layerStates: layerStates,\n        layerStatesArray: layerStatesArray,\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        skippedFeatureUids: this.skippedFeatureUids_,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      });\n    }\n\n    if (frameState) {\n      frameState.extent = getForViewAndSize(viewState.center,\n        viewState.resolution, viewState.rotation, frameState.size, extent);\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                    !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      var idle = this.previousExtent_ &&\n          !frameState.viewHints[ViewHint.ANIMATING] &&\n          !frameState.viewHints[ViewHint.INTERACTING] &&\n          !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    setTimeout(this.handlePostRender.bind(this), 0);\n\n  };\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setLayerGroup = function setLayerGroup (layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  };\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setSize = function setSize (size) {\n    this.set(MapProperty.SIZE, size);\n  };\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setTarget = function setTarget (target) {\n    this.set(MapProperty.TARGET, target);\n  };\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setView = function setView (view) {\n    this.set(MapProperty.VIEW, view);\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.skipFeature = function skipFeature (feature) {\n    this.skippedFeatureUids_[getUid(feature)] = true;\n    this.render();\n  };\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.updateSize = function updateSize () {\n    var targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      var computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n            parseFloat(computedStyle['borderLeftWidth']) -\n            parseFloat(computedStyle['paddingLeft']) -\n            parseFloat(computedStyle['paddingRight']) -\n            parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n            parseFloat(computedStyle['borderTopWidth']) -\n            parseFloat(computedStyle['paddingTop']) -\n            parseFloat(computedStyle['paddingBottom']) -\n            parseFloat(computedStyle['borderBottomWidth'])\n      ]);\n    }\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.unskipFeature = function unskipFeature (feature) {\n    delete this.skippedFeatureUids_[getUid(feature)];\n    this.render();\n  };\n\n  return PluggableMap;\n}(BaseObject));\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {HTMLElement|Document}\n   */\n  var keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  var values = {};\n\n  var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n    /** @type {LayerGroup} */ (options.layers) : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  var controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.controls).getArray === 'function',\n        47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  var interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.interactions).getArray === 'function',\n        48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  var overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.overlays).getArray === 'function',\n        49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n  for (var i = 0, ii = layers.length; i < ii; ++i) {\n    var layer = layers[i];\n    if (typeof /** @type {?} */ (layer).getLayers === 'function') {\n      return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\n    } else {\n      var source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/control/Control\n */\nimport {VOID} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /*@__PURE__*/(function (BaseObject) {\n  function Control(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @type {function(import(\"../MapEvent.js\").default)}\n     */\n    this.render = options.render ? options.render : VOID;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  if ( BaseObject ) Control.__proto__ = BaseObject;\n  Control.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Control.prototype.constructor = Control;\n\n  /**\n   * @inheritDoc\n   */\n  Control.prototype.disposeInternal = function disposeInternal () {\n    removeNode(this.element);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Control.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Control.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      var target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  };\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  Control.prototype.setTarget = function setTarget (target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  };\n\n  return Control;\n}(BaseObject));\n\n\nexport default Control;\n\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nvar Layer = /*@__PURE__*/(function (BaseLayer) {\n  function Layer(options) {\n\n    var baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this,\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n    var source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  if ( BaseLayer ) Layer.__proto__ = BaseLayer;\n  Layer.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  Layer.prototype.constructor = Layer;\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  };\n\n  /**\n   * Get the layer source.\n   * @return {import(\"../source/Source.js\").default} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  Layer.prototype.getSource = function getSource () {\n    var source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {import(\"../source/Source.js\").default} */ (source) || null\n    );\n  };\n\n  /**\n    * @inheritDoc\n    */\n  Layer.prototype.getSourceState = function getSourceState () {\n    var source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourceChange_ = function handleSourceChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourcePropertyChange_ = function handleSourcePropertyChange_ () {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    var source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Layer.prototype.setMap = function setMap (map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n        var layerState = this.getLayerState();\n        layerState.managed = false;\n        if (this.getZIndex() === undefined) {\n          layerState.zIndex = Infinity;\n        }\n        renderEvent.frameState.layerStatesArray.push(layerState);\n        renderEvent.frameState.layerStates[getUid(this)] = layerState;\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the layer source.\n   * @param {import(\"../source/Source.js\").default} source The layer source.\n   * @observable\n   * @api\n   */\n  Layer.prototype.setSource = function setSource (source) {\n    this.set(LayerProperty.SOURCE, source);\n  };\n\n  return Layer;\n}(BaseLayer));\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\nexport default Layer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /*@__PURE__*/(function (Control) {\n  function Attribution(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  if ( Control ) Attribution.__proto__ = Control;\n  Attribution.prototype = Object.create( Control && Control.prototype );\n  Attribution.prototype.constructor = Attribution;\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  Attribution.prototype.collectSourceAttributions_ = function collectSourceAttributions_ (frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    var lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    var visibleAttributions = [];\n\n    var layerStatesArray = frameState.layerStatesArray;\n    var resolution = frameState.viewState.resolution;\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (!visibleAtResolution(layerState, resolution)) {\n        continue;\n      }\n\n      var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      var attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      var attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n        this.setCollapsible(false);\n      }\n\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  };\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  Attribution.prototype.updateElement_ = function updateElement_ (frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var attributions = this.collectSourceAttributions_(frameState);\n\n    var visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Attribution.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  Attribution.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  };\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  return Attribution;\n}(Control));\n\n\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n\n//# sourceMappingURL=Attribution.js.map","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /*@__PURE__*/(function (Control) {\n  function Rotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    var label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    var button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  if ( Control ) Rotate.__proto__ = Control;\n  Rotate.prototype = Object.create( Control && Control.prototype );\n  Rotate.prototype.constructor = Rotate;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Rotate.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Rotate.prototype.resetNorth_ = function resetNorth_ () {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    if (view.getRotation() !== undefined) {\n      if (this.duration_ > 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  };\n\n  return Rotate;\n}(Control));\n\n\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  var rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    var transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      var contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n\n//# sourceMappingURL=Rotate.js.map","/**\n * @module ol/control/Zoom\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /*@__PURE__*/(function (Control) {\n  function Zoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    var delta = options.delta !== undefined ? options.delta : 1;\n\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    var inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n\n    var outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Control ) Zoom.__proto__ = Control;\n  Zoom.prototype = Object.create( Control && Control.prototype );\n  Zoom.prototype.constructor = Zoom;\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Zoom.prototype.handleClick_ = function handleClick_ (delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  };\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  Zoom.prototype.zoomByDelta_ = function zoomByDelta_ (delta) {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    var currentResolution = view.getResolution();\n    if (currentResolution) {\n      var newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  };\n\n  return Zoom;\n}(Control));\n\n\nexport default Zoom;\n\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var controls = new Collection();\n\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = function Kinetic(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function begin () {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function update (x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function end () {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  var delay = Date.now() - this.delay_;\n  var lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  var firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  var dx = this.points_[lastIndex] - this.points_[firstIndex];\n  var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function getDistance () {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function getAngle () {\n  return this.angle_;\n};\n\nexport default Kinetic;\n\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /*@__PURE__*/(function (BaseObject) {\n  function Interaction(options) {\n    BaseObject.call(this);\n\n    if (options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  if ( BaseObject ) Interaction.__proto__ = BaseObject;\n  Interaction.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Interaction.prototype.constructor = Interaction;\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.getActive = function getActive () {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  };\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Interaction.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  Interaction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    return true;\n  };\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.setActive = function setActive (active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  };\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  Interaction.prototype.setMap = function setMap (map) {\n    this.map_ = map;\n  };\n\n  return Interaction;\n}(BaseObject));\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  var currentCenter = view.getCenter();\n  if (currentCenter) {\n    var center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    var currentRotation = view.getRotation();\n    var currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  var currentResolution = view.getResolution();\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    var resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    var currentCenter = view.getCenter();\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    var currentResolution = view.getResolution();\n    var currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /*@__PURE__*/(function (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Interaction ) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n\n  return DoubleClickZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function(mapBrowserEvent) {\n  var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName = /** @type {Element} */ (target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /*@__PURE__*/(function (Interaction) {\n  function PointerInteraction(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  if ( Interaction ) PointerInteraction.__proto__ = Interaction;\n  PointerInteraction.prototype = Object.create( Interaction && Interaction.prototype );\n  PointerInteraction.prototype.constructor = PointerInteraction;\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {};\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @override\n   * @api\n   */\n  PointerInteraction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n\n    var stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        var handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        var handled = this.handleDownEvent(mapBrowserEvent);\n        if (handled) {\n          mapBrowserEvent.preventDefault();\n        }\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  };\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleMoveEvent = function handleMoveEvent (mapBrowserEvent) {};\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  PointerInteraction.prototype.stopDown = function stopDown (handled) {\n    return handled;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  PointerInteraction.prototype.updateTrackedPointers_ = function updateTrackedPointers_ (mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      var event = mapBrowserEvent.pointerEvent;\n\n      var id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  };\n\n  return PointerInteraction;\n}(Interaction));\n\n\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\nexport default PointerInteraction;\n\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/interaction/DragPan\n */\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /*@__PURE__*/(function (PointerInteraction) {\n  function DragPan(opt_options) {\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n  if ( PointerInteraction ) DragPan.__proto__ = PointerInteraction;\n  DragPan.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragPan.prototype.constructor = DragPan;\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    var targetPointers = this.targetPointers;\n    var centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        var deltaX = this.lastCentroid[0] - centroid[0];\n        var deltaY = centroid[1] - this.lastCentroid[1];\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var center = [deltaX, deltaY];\n        scaleCoordinate(center, view.getResolution());\n        rotateCoordinate(center, view.getRotation());\n        addCoordinate(center, view.getCenter());\n        center = view.constrainCenter(center);\n        view.setCenter(center);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        var distance = this.kinetic_.getDistance();\n        var angle = this.kinetic_.getAngle();\n        var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n        var centerpx = map.getPixelFromCoordinate(center);\n        var dest = map.getCoordinateFromPixel([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle)\n        ]);\n        view.animate({\n          center: view.constrainCenter(dest),\n          duration: 500,\n          easing: easeOut\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.setHint(ViewHint.INTERACTING, -1);\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.setCenter(mapBrowserEvent.frameState.viewState.center);\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragPan;\n}(PointerInteraction));\n\nexport default DragPan;\n\n//# sourceMappingURL=DragPan.js.map","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function DragRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotate.prototype.constructor = DragRotate;\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    var size = map.getSize();\n    var offset = mapBrowserEvent.pixel;\n    var theta =\n        Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      var delta = theta - this.lastAngle_;\n      var rotation = view.getRotation();\n      rotateWithoutConstraints(view, rotation - delta);\n    }\n    this.lastAngle_ = theta;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var rotation = view.getRotation();\n    rotate(view, rotation, undefined, this.duration_);\n    return false;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragRotate;\n}(PointerInteraction));\n\nexport default DragRotate;\n\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nvar RenderBox = /*@__PURE__*/(function (Disposable) {\n  function RenderBox(className) {\n    Disposable.call(this);\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  if ( Disposable ) RenderBox.__proto__ = Disposable;\n  RenderBox.prototype = Object.create( Disposable && Disposable.prototype );\n  RenderBox.prototype.constructor = RenderBox;\n\n  /**\n   * @inheritDoc\n   */\n  RenderBox.prototype.disposeInternal = function disposeInternal () {\n    this.setMap(null);\n  };\n\n  /**\n   * @private\n   */\n  RenderBox.prototype.render_ = function render_ () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var px = 'px';\n    var style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  RenderBox.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      var style = this.element_.style;\n      style.left = style.top = style.width = style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  RenderBox.prototype.setPixels = function setPixels (startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  };\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  RenderBox.prototype.createOrUpdateGeometry = function createOrUpdateGeometry () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  };\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  RenderBox.prototype.getGeometry = function getGeometry () {\n    return this.geometry_;\n  };\n\n  return RenderBox;\n}(Disposable));\n\n\nexport default RenderBox;\n\n//# sourceMappingURL=Box.js.map","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {VOID} from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} onBoxEnd Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /*@__PURE__*/(function (Event) {\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) DragBoxEvent.__proto__ = Event;\n  DragBoxEvent.prototype = Object.create( Event && Event.prototype );\n  DragBoxEvent.prototype.constructor = DragBoxEvent;\n\n  return DragBoxEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /*@__PURE__*/(function (PointerInteraction) {\n  function DragBox(opt_options) {\n\n    PointerInteraction.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n    * @type {import(\"../render/Box.js\").default}\n    * @private\n    */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n\n    /**\n    * @type {import(\"../pixel.js\").Pixel}\n    * @private\n    */\n    this.startPixel_ = null;\n\n    /**\n    * @private\n    * @type {import(\"../events/condition.js\").Condition}\n    */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n    * @private\n    * @type {EndCondition}\n    */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : this.defaultBoxEndCondition;\n  }\n\n  if ( PointerInteraction ) DragBox.__proto__ = PointerInteraction;\n  DragBox.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragBox.prototype.constructor = DragBox;\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  DragBox.prototype.defaultBoxEndCondition = function defaultBoxEndCondition (mapBrowserEvent, startPixel, endPixel) {\n    var width = endPixel[0] - startPixel[0];\n    var height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  };\n\n  /**\n  * Returns geometry of last drawn box.\n  * @return {import(\"../geom/Polygon.js\").default} Geometry.\n  * @api\n  */\n  DragBox.prototype.getGeometry = function getGeometry () {\n    return this.box_.getGeometry();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    this.box_.setMap(null);\n\n    if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n      this.onBoxEnd_(mapBrowserEvent);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) &&\n        this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragBox;\n}(PointerInteraction));\n\n\nexport default DragBox;\n\n//# sourceMappingURL=DragBox.js.map","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from './DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /*@__PURE__*/(function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if ( DragBox ) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create( DragBox && DragBox.prototype );\n  DragZoom.prototype.constructor = DragZoom;\n\n  return DragZoom;\n}(DragBox));\n\n\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n  var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\n//# sourceMappingURL=KeyCode.js.map","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /*@__PURE__*/(function (Interaction) {\n  function KeyboardPan(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n  if ( Interaction ) KeyboardPan.__proto__ = Interaction;\n  KeyboardPan.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardPan.prototype.constructor = KeyboardPan;\n\n  return KeyboardPan;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      var deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      var delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n\n//# sourceMappingURL=KeyboardPan.js.map","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /*@__PURE__*/(function (Interaction) {\n  function KeyboardZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n  if ( Interaction ) KeyboardZoom.__proto__ = Interaction;\n  KeyboardZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardZoom.prototype.constructor = KeyboardZoom;\n\n  return KeyboardZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      var map = mapBrowserEvent.map;\n      var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      var view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nvar MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport var Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /*@__PURE__*/(function (Interaction) {\n  function MouseWheelZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.trackpadDeltaPerZoom_ = 300;\n\n    /**\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\n     * @private\n     * @type {number}\n     */\n    this.trackpadZoomBuffer_ = 1.5;\n\n  }\n\n  if ( Interaction ) MouseWheelZoom.__proto__ = Interaction;\n  MouseWheelZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  MouseWheelZoom.prototype.constructor = MouseWheelZoom;\n\n  /**\n   * @private\n   */\n  MouseWheelZoom.prototype.decrementInteractingHint_ = function decrementInteractingHint_ () {\n    this.trackpadTimeoutId_ = undefined;\n    var view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @override\n   */\n  MouseWheelZoom.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    var type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n      return true;\n    }\n\n    mapBrowserEvent.preventDefault();\n\n    var map = mapBrowserEvent.map;\n    var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    var delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX &&\n          wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n      delta = -wheelEvent.wheelDeltaY;\n      if (SAFARI) {\n        delta /= 3;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n\n    var now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ?\n        Mode.TRACKPAD :\n        Mode.WHEEL;\n    }\n\n    if (this.mode_ === Mode.TRACKPAD) {\n      var view = map.getView();\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        view.setHint(ViewHint.INTERACTING, 1);\n      }\n      this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n      var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n      var minResolution = view.getMinResolution();\n      var maxResolution = view.getMaxResolution();\n      var rebound = 0;\n      if (resolution < minResolution) {\n        resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n        rebound = 1;\n      } else if (resolution > maxResolution) {\n        resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n        rebound = -1;\n      }\n      if (this.lastAnchor_) {\n        var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n        view.setCenter(view.constrainCenter(center));\n      }\n      view.setResolution(resolution);\n\n      if (rebound === 0 && this.constrainResolution_) {\n        view.animate({\n          resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: this.duration_\n        });\n      }\n\n      if (rebound > 0) {\n        view.animate({\n          resolution: minResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      } else if (rebound < 0) {\n        view.animate({\n          resolution: maxResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      }\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.delta_ += delta;\n\n    var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n    return false;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  MouseWheelZoom.prototype.handleWheelZoom_ = function handleWheelZoom_ (map) {\n    var view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    var maxDelta = MAX_DELTA;\n    var delta = clamp(this.delta_, -maxDelta, maxDelta);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.delta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  };\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  MouseWheelZoom.prototype.setMouseAnchor = function setMouseAnchor (useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  };\n\n  return MouseWheelZoom;\n}(Interaction));\n\nexport default MouseWheelZoom;\n\n//# sourceMappingURL=MouseWheelZoom.js.map","/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) PinchRotate.__proto__ = PointerInteraction;\n  PinchRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchRotate.prototype.constructor = PinchRotate;\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var rotationDelta = 0.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n\n    // angle between touches\n    var angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX);\n\n    if (this.lastAngle_ !== undefined) {\n      var delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ &&\n          Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      var rotation = view.getRotation();\n      map.render();\n      rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      if (this.rotating_) {\n        var rotation = view.getRotation();\n        rotate(view, rotation, this.anchor_, this.duration_);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchRotate;\n}(PointerInteraction));\n\nexport default PinchRotate;\n\n//# sourceMappingURL=PinchRotate.js.map","/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  if ( PointerInteraction ) PinchZoom.__proto__ = PointerInteraction;\n  PinchZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchZoom.prototype.constructor = PinchZoom;\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var scaleDelta = 1.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n    var dx = touch0.clientX - touch1.clientX;\n    var dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    var resolution = view.getResolution();\n    var maxResolution = view.getMaxResolution();\n    var minResolution = view.getMinResolution();\n    var newResolution = resolution * scaleDelta;\n    if (newResolution > maxResolution) {\n      scaleDelta = maxResolution / resolution;\n      newResolution = maxResolution;\n    } else if (newResolution < minResolution) {\n      scaleDelta = minResolution / resolution;\n      newResolution = minResolution;\n    }\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    zoomWithoutConstraints(view, newResolution, this.anchor_);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      var resolution = view.getResolution();\n      if (this.constrainResolution_ ||\n          resolution < view.getMinResolution() ||\n          resolution > view.getMaxResolution()) {\n        // Zoom to final resolution, with an animation, and provide a\n        // direction not to zoom out/in if user was pinching in/out.\n        // Direction is > 0 if pinching out, and < 0 if pinching in.\n        var direction = this.lastScaleDelta_ - 1;\n        zoom(view, resolution, this.anchor_, this.duration_, direction);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchZoom;\n}(PointerInteraction));\n\nexport default PinchZoom;\n\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport {focus} from './events/condition.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var interactions = new Collection();\n\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      condition: options.onFocusOnly ? focus : undefined,\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      condition: options.onFocusOnly ? focus : undefined,\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/ImageBase\n */\nimport {abstract} from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @abstract\n */\nvar ImageBase = /*@__PURE__*/(function (EventTarget) {\n  function ImageBase(extent, resolution, pixelRatio, state) {\n\n    EventTarget.call(this);\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n\n  }\n\n  if ( EventTarget ) ImageBase.__proto__ = EventTarget;\n  ImageBase.prototype = Object.create( EventTarget && EventTarget.prototype );\n  ImageBase.prototype.constructor = ImageBase;\n\n  /**\n   * @protected\n   */\n  ImageBase.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  ImageBase.prototype.getExtent = function getExtent () {\n    return this.extent;\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  ImageBase.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  ImageBase.prototype.getPixelRatio = function getPixelRatio () {\n    return this.pixelRatio_;\n  };\n\n  /**\n   * @return {number} Resolution.\n   */\n  ImageBase.prototype.getResolution = function getResolution () {\n    return /** @type {number} */ (this.resolution);\n  };\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  ImageBase.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  ImageBase.prototype.load = function load () {\n    abstract();\n  };\n\n  return ImageBase;\n}(EventTarget));\n\n\nexport default ImageBase;\n\n//# sourceMappingURL=ImageBase.js.map","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=))} Loader\n */\n\n\nvar ImageCanvas = /*@__PURE__*/(function (ImageBase) {\n  function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n    var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {Error}\n     */\n    this.error_ = null;\n\n  }\n\n  if ( ImageBase ) ImageCanvas.__proto__ = ImageBase;\n  ImageCanvas.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageCanvas.prototype.constructor = ImageCanvas;\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {Error} Any error that occurred during rendering.\n   */\n  ImageCanvas.prototype.getError = function getError () {\n    return this.error_;\n  };\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error=} err Any error during drawing.\n   * @private\n   */\n  ImageCanvas.prototype.handleLoad_ = function handleLoad_ (err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageCanvas.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  ImageCanvas.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  return ImageCanvas;\n}(ImageBase));\n\n\nexport default ImageCanvas;\n\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n\n//# sourceMappingURL=LayerType.js.map","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorRenderType.js.map","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nvar RenderEvent = /*@__PURE__*/(function (Event) {\n  function RenderEvent(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n\n    Event.call(this, type);\n\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {import(\"./VectorContext.js\").default|undefined}\n     * @api\n     */\n    this.vectorContext = opt_vectorContext;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {import(\"../webgl/Context.js\").default|null|undefined}\n     * @api\n     */\n    this.glContext = opt_glContext;\n\n  }\n\n  if ( Event ) RenderEvent.__proto__ = Event;\n  RenderEvent.prototype = Object.create( Event && Event.prototype );\n  RenderEvent.prototype.constructor = RenderEvent;\n\n  return RenderEvent;\n}(Event));\n\nexport default RenderEvent;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /*@__PURE__*/(function (EventTarget) {\n  function LRUCache(opt_highWaterMark) {\n\n    EventTarget.call(this);\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n  if ( EventTarget ) LRUCache.__proto__ = EventTarget;\n  LRUCache.prototype = Object.create( EventTarget && EventTarget.prototype );\n  LRUCache.prototype.constructor = LRUCache;\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  LRUCache.prototype.canExpireCache = function canExpireCache () {\n    return this.getCount() > this.highWaterMark;\n  };\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  LRUCache.prototype.clear = function clear () {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  LRUCache.prototype.containsKey = function containsKey (key) {\n    return this.entries_.hasOwnProperty(key);\n  };\n\n\n  /**\n   * @param {function(this: S, T, string, LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n  LRUCache.prototype.forEach = function forEach (f, opt_this) {\n    var entry = this.oldest_;\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  LRUCache.prototype.get = function get (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  };\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  LRUCache.prototype.remove = function remove (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @return {number} Count.\n   */\n  LRUCache.prototype.getCount = function getCount () {\n    return this.count_;\n  };\n\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  LRUCache.prototype.getKeys = function getKeys () {\n    var keys = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  };\n\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  LRUCache.prototype.getValues = function getValues () {\n    var values = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  };\n\n\n  /**\n   * @return {T} Last value.\n   */\n  LRUCache.prototype.peekLast = function peekLast () {\n    return this.oldest_.value_;\n  };\n\n\n  /**\n   * @return {string} Last key.\n   */\n  LRUCache.prototype.peekLastKey = function peekLastKey () {\n    return this.oldest_.key_;\n  };\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  LRUCache.prototype.peekFirstKey = function peekFirstKey () {\n    return this.newest_.key_;\n  };\n\n\n  /**\n   * @return {T} value Value.\n   */\n  LRUCache.prototype.pop = function pop () {\n    var entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.replace = function replace (key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.set = function set (key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    var entry = /** @type {Entry} */ ({\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    });\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  };\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  LRUCache.prototype.setSize = function setSize (size) {\n    this.highWaterMark = size;\n  };\n\n\n  /**\n   * Prune the cache.\n   */\n  LRUCache.prototype.prune = function prune () {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  };\n\n  return LRUCache;\n}(EventTarget));\n\nexport default LRUCache;\n\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LRUCache<HTMLCanvasElement>}\n * @api\n */\nexport var labelCache = new LRUCache();\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function() {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n\n  function isAvailable(font) {\n    var context = getMeasureContext();\n    // Check weight ranges according to\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    for (var weight = 100; weight <= 700; weight += 300) {\n      var fontWeight = weight + ' ';\n      var available = true;\n      for (var i = 0; i < len; ++i) {\n        var referenceFont = referenceFonts[i];\n        context.font = fontWeight + size + referenceFont;\n        referenceWidth = context.measureText(text).width;\n        if (font != referenceFont) {\n          context.font = fontWeight + size + font + ',' + referenceFont;\n          var width = context.measureText(text).width;\n          // If width and referenceWidth are the same, then the fallback was used\n          // instead of the font we wanted, so the font is not available.\n          available = available && width != referenceWidth;\n        }\n      }\n      if (available) {\n        // Consider font available when it is available in one weight range.\n        //FIXME With this we miss rare corner cases, so we should consider\n        //FIXME checking availability for each requested weight range.\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function() {\n  var span;\n  var heights = textHeights;\n  return function(font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport var resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  var el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    var rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {Color} Color.\n       */\n      function(s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            var i = 0;\n            for (var key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  var r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    var n = s.length - 1; // number of hex digits\n    var d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    var hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  var r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  var g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  var b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  var a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n//# sourceMappingURL=color.js.map","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = function VectorContext () {};\n\nVectorContext.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {};\n\n/**\n * Render a geometry.\n *\n * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function drawGeometry (geometry) {};\n\n/**\n * Set the rendering style.\n *\n * @param {import(\"../style/Style.js\").default} style The rendering style.\n */\nVectorContext.prototype.setStyle = function setStyle (style) {};\n\n/**\n * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawCircle = function drawCircle (circleGeometry, feature) {};\n\n/**\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n */\nVectorContext.prototype.drawFeature = function drawFeature (feature, style) {};\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function drawGeometryCollection (geometryCollectionGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPoint = function drawPoint (pointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawText = function drawText (geometry, feature) {};\n\n/**\n * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {};\n\n/**\n * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function setImageStyle (imageStyle, opt_declutterGroup) {};\n\n/**\n * @param {import(\"../style/Text.js\").default} textStyle Text style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function setTextStyle (textStyle, opt_declutterGroup) {};\n\nexport default VectorContext;\n\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /*@__PURE__*/(function (VectorContext) {\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  if ( VectorContext ) CanvasImmediateRenderer.__proto__ = VectorContext;\n  CanvasImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasImmediateRenderer.prototype.constructor = CanvasImmediateRenderer;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawImages_ = function drawImages_ (flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    var rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (rotation !== 0 || this.imageScale_ != 1) {\n        var centerX = x + this.imageAnchorX_;\n        var centerY = y + this.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this.imageScale_, this.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n        this.imageWidth_, this.imageHeight_, x, y,\n        this.imageWidth_, this.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (rotation !== 0 || this.textScale_ != 1) {\n        var localTransform = composeTransform(this.tmpLocalTransform_,\n          x, y,\n          this.textScale_, this.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this.textStrokeState_) {\n        context.strokeText(this.text_, x, y);\n      }\n      if (this.textFillState_) {\n        context.fillText(this.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function moveToLineTo_ (flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasImmediateRenderer.prototype.drawRings_ = function drawRings_ (flatCoordinates, offset, ends, stride) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  };\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawCircle = function drawCircle (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPoint = function drawPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawLineString = function drawLineString (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry) {\n    var geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends = /** @type {Array<number>} */ (geometry.getEnds());\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function setContextFillState_ (fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function setContextStrokeState_ (strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      if (CANVAS_LINE_DASH) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      }\n      if (CANVAS_LINE_DASH) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\n              strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit =\n            strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle =\n            strokeState.strokeStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function setContextTextState_ (textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline =\n          /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  };\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      var imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      var imageImage = imageStyle.getImage(1);\n      var imageOrigin = imageStyle.getOrigin();\n      var imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageWidth_ = imageSize[0];\n    }\n  };\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScale();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  };\n\n  return CanvasImmediateRenderer;\n}(VectorContext));\n\n\nexport default CanvasImmediateRenderer;\n\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = function IconImageCache() {\n\n  /**\n  * @type {!Object<string, import(\"./IconImage.js\").default>}\n  * @private\n  */\n  this.cache_ = {};\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.cacheSize_ = 0;\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.maxCacheSize_ = 32;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.clear = function clear () {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.expire = function expire () {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    for (var key in this.cache_) {\n      var iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @return {import(\"./IconImage.js\").default} Icon image.\n*/\nIconImageCache.prototype.get = function get (src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @param {import(\"./IconImage.js\").default} iconImage Icon image.\n*/\nIconImageCache.prototype.set = function set (src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\nIconImageCache.prototype.setSize = function setSize (maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/renderer/Map\n */\nimport {abstract, getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n/**\n * @abstract\n */\nvar MapRenderer = /*@__PURE__*/(function (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"./Layer.js\").default>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"./Layer.js\").default>}\n     */\n    this.layerRendererConstructors_ = [];\n\n  }\n\n  if ( Disposable ) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create( Disposable && Disposable.prototype );\n  MapRenderer.prototype.constructor = MapRenderer;\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    abstract();\n  };\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array<typeof import(\"./Layer.js\").default>} constructors Layer renderers.\n   */\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D (frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    invertTransform(\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  };\n\n  /**\n   * Removes all layer renderers.\n   */\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers () {\n    for (var key in this.layerRenderers_) {\n      this.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n   *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      var managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    var projection = viewState.projection;\n\n    var translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this.getLayerRenderer(layer);\n        var source = /** @type {import(\"../layer/Layer.js\").default} */ (layer).getSource();\n        if (source) {\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            source.getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    return abstract();\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @param {import(\"../layer/Base.js\").default} layer Layer.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer (layer) {\n    var layerKey = getUid(layer);\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      var renderer;\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        var candidate = this.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer,\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey (layerKey) {\n    return this.layerRenderers_[layerKey];\n  };\n\n  /**\n   * @protected\n   * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n   */\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers () {\n    return this.layerRenderers_;\n  };\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  MapRenderer.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_ () {\n    this.map_.render();\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_ (layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_ (map, frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  };\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    abstract();\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache (frameState) {\n    frameState.postRenderFunctions.push(/** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (expireIconCache));\n  };\n\n  /**\n   * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers (frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n          /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n        );\n        return;\n      }\n    }\n  };\n\n  return MapRenderer;\n}(Disposable));\n\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * @param {import(\"../layer/Layer.js\").State} state1 First layer state.\n * @param {import(\"../layer/Layer.js\").State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array<typeof import(\"../Layer.js\").default>}\n */\nexport var layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CanvasMapRenderer = /*@__PURE__*/(function (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( MapRenderer ) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  CanvasMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n\n      var transform = this.getTransform(frameState);\n\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasMapRenderer.prototype.getTransform = function getTransform (frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    var rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      var layer = layerState.layer;\n      var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer));\n\n\nexport default CanvasMapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/Layer\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n\nvar LayerRenderer = /*@__PURE__*/(function (Observable) {\n  function LayerRenderer(layer) {\n\n    Observable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../layer/Layer.js\").default}\n     */\n    this.layer_ = layer;\n\n  }\n\n  if ( Observable ) LayerRenderer.__proto__ = Observable;\n  LayerRenderer.prototype = Object.create( Observable && Observable.prototype );\n  LayerRenderer.prototype.constructor = LayerRenderer;\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  LayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        /**\n         * @param {import(\"../Tile.js\").default} tile Tile.\n         */\n        function callback(tile) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @return {T|void} Callback result.\n   * @template T\n   */\n  LayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {};\n\n  /**\n   * @return {import(\"../layer/Layer.js\").default} Layer.\n   */\n  LayerRenderer.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  LayerRenderer.prototype.handleImageChange_ = function handleImageChange_ (event) {\n    var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Is there a feature at the given coordinate?\n   */\n  LayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\n    return false;\n  };\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  LayerRenderer.prototype.loadImage = function loadImage (image) {\n    var imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  };\n\n  /**\n   * @protected\n   */\n  LayerRenderer.prototype.renderIfReadyAndVisible = function renderIfReadyAndVisible () {\n    var layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  LayerRenderer.prototype.scheduleExpireCache = function scheduleExpireCache (frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../PluggableMap.js\").default} map Map.\n       * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      var postRenderFunction = function(tileSource, map, frameState) {\n        var tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  };\n\n  /**\n   * @param {!Object<string, !Object<string, import(\"../TileRange.js\").default>>} usedTiles Used tiles.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {number} z Z.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @protected\n   */\n  LayerRenderer.prototype.updateUsedTiles = function updateUsedTiles (usedTiles, tileSource, z, tileRange) {\n    // FIXME should we use tilesToDrawByZ instead?\n    var tileSourceKey = getUid(tileSource);\n    var zKey = z.toString();\n    if (tileSourceKey in usedTiles) {\n      if (zKey in usedTiles[tileSourceKey]) {\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\n      } else {\n        usedTiles[tileSourceKey][zKey] = tileRange;\n      }\n    } else {\n      usedTiles[tileSourceKey] = {};\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  };\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(this: T, import(\"../Tile.js\").default)=} opt_tileCallback Tile callback.\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n   * @protected\n   * @template T\n   */\n  LayerRenderer.prototype.manageTilePyramid = function manageTilePyramid (\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback,\n    opt_this\n  ) {\n    var tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\n    var tileQueue = frameState.tileQueue;\n    var minZoom = tileGrid.getMinZoom();\n    var tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback.call(opt_this, tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  };\n\n  return LayerRenderer;\n}(Observable));\n\nexport default LayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {abstract} from '../../util.js';\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /*@__PURE__*/(function (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( LayerRenderer ) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clip = function clip (context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(extent);\n    var topRight = getTopRight(extent);\n    var bottomRight = getBottomRight(extent);\n    var bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  };\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @private\n   */\n  CanvasLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState, opt_transform) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var width = frameState.size[0] * frameState.pixelRatio;\n      var height = frameState.size[1] * frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      var transform = opt_transform !== undefined ?\n        opt_transform : this.getTransform(frameState, 0);\n      var render = new CanvasImmediateRenderer(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n      var composeEvent = new RenderEvent(type, render, frameState,\n        context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  CanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.preCompose = function preCompose (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasLayerRenderer.prototype.getTransform = function getTransform (frameState, offsetX) {\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var dx1 = pixelRatio * frameState.size[0] / 2;\n    var dy1 = pixelRatio * frameState.size[1] / 2;\n    var sx = pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0] + offsetX;\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  CanvasLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    return abstract();\n  };\n\n  return CanvasLayerRenderer;\n}(LayerRenderer));\n\nexport default CanvasLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {abstract} from '../../util.js';\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar IntermediateCanvasRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function IntermediateCanvasRenderer(layer) {\n\n    CanvasLayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToCanvasPixelTransform = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n  }\n\n  if ( CanvasLayerRenderer ) IntermediateCanvasRenderer.__proto__ = CanvasLayerRenderer;\n  IntermediateCanvasRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  IntermediateCanvasRenderer.prototype.constructor = IntermediateCanvasRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.preCompose(context, frameState);\n\n    var image = this.getImage();\n    if (image) {\n\n      // clipped rendering if layer extent is set\n      var extent = layerState.extent;\n      var clipped = extent !== undefined &&\n          !containsExtent(extent, frameState.extent) &&\n          intersects(extent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (extent));\n      }\n\n      var imageTransform = this.getImageTransform();\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      var alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity;\n\n      // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n      var dx = imageTransform[4];\n      var dy = imageTransform[5];\n      var dw = image.width * imageTransform[0];\n      var dh = image.height * imageTransform[3];\n      if (dw >= 0.5 && dh >= 0.5) {\n        context.drawImage(image, 0, 0, +image.width, +image.height,\n          Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      }\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n  IntermediateCanvasRenderer.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @return {!import(\"../../transform.js\").Transform} Image transform.\n   */\n  IntermediateCanvasRenderer.prototype.getImageTransform = function getImageTransform () {\n    return abstract();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    var pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n    var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  };\n\n  return IntermediateCanvasRenderer;\n}(CanvasLayerRenderer));\n\n\nexport default IntermediateCanvasRenderer;\n\n//# sourceMappingURL=IntermediateCanvas.js.map","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n\n    IntermediateCanvasRenderer.call(this, imageLayer);\n\n    /**\n     * @private\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this.vectorRenderer_ = /** @type {import(\"./VectorLayer.js\").default} */ (new ctor(imageLayer));\n          break;\n        }\n      }\n    }\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImage = function getImage () {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n\n    var image;\n    var imageLayer = /** @type {import(\"../../layer/Image.js\").default} */ (this.getLayer());\n    var imageSource = /** @type {import(\"../../source/Image.js\").default} */ (imageLayer.getSource());\n\n    var hints = frameState.viewHints;\n\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback);\n    }\n  };\n\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {import(\"../../layer/Vector.js\").default} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasImageLayerRenderer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {import(\"../../layer/Image.js\").default} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = function TileRange(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function contains (tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function containsTileRange (tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n     this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function containsXY (x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function equals (tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n     this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function extend (tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n/**\n * @return {number} Height.\n */\nTileRange.prototype.getHeight = function getHeight () {\n  return this.maxY - this.minY + 1;\n};\n\n/**\n * @return {import(\"./size.js\").Size} Size.\n */\nTileRange.prototype.getSize = function getSize () {\n  return [this.getWidth(), this.getHeight()];\n};\n\n/**\n * @return {number} Width.\n */\nTileRange.prototype.getWidth = function getWidth () {\n  return this.maxX - this.minX + 1;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\nTileRange.prototype.intersects = function intersects (tileRange) {\n  return this.minX <= tileRange.maxX &&\n     this.maxX >= tileRange.minX &&\n     this.minY <= tileRange.maxY &&\n     this.maxY >= tileRange.minY;\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasTileLayerRenderer(tileLayer, opt_noContext) {\n\n    IntermediateCanvasRenderer.call(this, tileLayer);\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = opt_noContext ? null : createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.oversampling_;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.zDirection = 0;\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasTileLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasTileLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasTileLayerRenderer.prototype.constructor = CanvasTileLayerRenderer;\n\n  /**\n   * @private\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  CanvasTileLayerRenderer.prototype.isDrawableTile_ = function isDrawableTile_ (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileState = tile.getState();\n    var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  CanvasTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile_(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var viewResolution = viewState.resolution;\n    var viewCenter = viewState.center;\n\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var sourceRevision = tileSource.getRevision();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n    var tileResolution = tileGrid.getResolution(z);\n    var oversampling = Math.round(viewResolution / tileResolution) || 1;\n    var extent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      extent = getIntersection(extent, layerState.extent);\n    }\n    if (isEmpty(extent)) {\n      // Return false to prevent the rendering of the layer.\n      return false;\n    }\n\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    var imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n    var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    var findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    var hints = frameState.viewHints;\n    var animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n    var tmpExtent = this.tmpExtent;\n    var tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    var tile, x, y;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n          continue;\n        }\n        tile = this.getTile(z, x, y, pixelRatio, projection);\n        if (this.isDrawableTile_(tile)) {\n          var uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            var inTransition = tile.inTransition(uid);\n            if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        var childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord, tmpTileRange, tmpExtent);\n        var covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n    var renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n      this.newTiles_ ||\n          !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n          this.renderedRevision != sourceRevision ||\n          oversampling != this.oversampling_ ||\n          !animatingOrInteracting && renderedResolution != this.renderedResolution\n    )) {\n\n      var context = this.context;\n      if (context) {\n        var tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n        var width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n        var height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n          this.oversampling_ = oversampling;\n          canvas.width = width;\n          canvas.height = height;\n        } else {\n          if (this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) {\n            context.clearRect(0, 0, width, height);\n          }\n          oversampling = this.oversampling_;\n        }\n      }\n\n      this.renderedTiles.length = 0;\n      /** @type {Array<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(function(a, b) {\n        if (a === z) {\n          return 1;\n        } else if (b === z) {\n          return -1;\n        } else {\n          return a > b ? 1 : a < b ? -1 : 0;\n        }\n      });\n      var currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n      var tileExtent, tileGutter, tilesToDraw, w, h;\n      for (i = 0, ii = zs.length; i < ii; ++i) {\n        currentZ = zs[i];\n        currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n        currentResolution = tileGrid.getResolution(currentZ);\n        currentScale = currentResolution / tileResolution;\n        tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n        tilesToDraw = tilesToDrawByZ[currentZ];\n        for (var tileCoordKey in tilesToDraw) {\n          tile = tilesToDraw[tileCoordKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n          x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n          y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n          w = currentTilePixelSize[0] * currentScale / oversampling;\n          h = currentTilePixelSize[1] * currentScale / oversampling;\n          this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n          this.renderedTiles.push(tile);\n        }\n      }\n\n      this.renderedRevision = sourceRevision;\n      this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n      this.renderedExtent_ = imageExtent;\n    }\n\n    var scale = this.renderedResolution / viewResolution;\n    var transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n\n    return this.renderedTiles.length > 0;\n  };\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  CanvasTileLayerRenderer.prototype.drawTileImage = function drawTileImage (tile, frameState, layerState, x, y, w, h, gutter, transition) {\n    var image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    var uid = getUid(this);\n    var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n      this.context.clearRect(x, y, w, h);\n    }\n    var alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImage = function getImage () {\n    var context = this.context;\n    return context ? context.canvas : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  CanvasTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n  };\n\n  return CanvasTileLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasTileLayerRenderer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {import(\"../../layer/Tile.js\").default} */ (layer));\n};\n\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/render/ReplayGroup\n */\nimport {abstract} from '../util.js';\n\n/**\n * Base class for replay groups.\n */\nvar ReplayGroup = function ReplayGroup () {};\n\nReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function isEmpty () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {boolean} group Group with previous replay\n * @return {Array<*>} The resulting instruction group\n */\nReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n  return abstract();\n};\n\nexport default ReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n\n//# sourceMappingURL=ReplayType.js.map","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  for (var i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  var result = [];\n\n  // Keep text upright\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  var numChars = text.length;\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    var interpolate = segmentPos / segmentLength;\n    var x = lerp(x1, x2, interpolate);\n    var y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/replay\n */\nimport ReplayType from './ReplayType.js';\n\n\n/**\n * @const\n * @type {Array<ReplayType>}\n */\nexport var ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n\n//# sourceMappingURL=replay.js.map","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid} from '../../util.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n\n\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\nvar CanvasReplay = /*@__PURE__*/(function (VectorContext) {\n  function CanvasReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    VectorContext.call(this);\n\n    /**\n     * @type {?}\n     */\n    this.declutterTree = declutterTree;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n  }\n\n  if ( VectorContext ) CanvasReplay.__proto__ = VectorContext;\n  CanvasReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasReplay.prototype.constructor = CanvasReplay;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayTextBackground_ = function replayTextBackground_ (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array<number>} padding Padding.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayImage_ = function replayImage_ (\n    context,\n    x,\n    y,\n    image,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    var fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    var w = (width + originX > image.width) ? image.width - originX : width;\n    var h = (height + originY > image.height) ? image.height - originY : height;\n    var boxW = padding[3] + w * scale + padding[1];\n    var boxH = padding[0] + h * scale + padding[2];\n    var boxX = x - padding[3];\n    var boxY = y - padding[0];\n\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p1;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p2;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p3;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p4;\n    if (fillStroke || rotation !== 0) {\n      p1 = [boxX, boxY];\n      p2 = [boxX + boxW, boxY];\n      p3 = [boxX + boxW, boxY + boxH];\n      p4 = [boxX, boxY + boxH];\n    }\n\n    var transform = null;\n    if (rotation !== 0) {\n      var centerX = x + anchorX;\n      var centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      createOrUpdateEmpty(tmpExtent);\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    var canvas = context.canvas;\n    var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    var intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      var declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs && fillStroke) {\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n      }\n      declutterGroup.push(declutterArgs);\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction));\n      }\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  CanvasReplay.prototype.applyPixelRatio = function applyPixelRatio (dashArray) {\n    var pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  CanvasReplay.prototype.appendFlatCoordinates = function appendFlatCoordinates (flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n    var myEnd = this.coordinates.length;\n    var extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    var lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var nextCoord = [NaN, NaN];\n    var skipped = true;\n\n    var i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this.coordinates[myEnd++] = lastCoord[0];\n          this.coordinates[myEnd++] = lastCoord[1];\n        }\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastCoord[0] = nextCoord[0];\n      lastCoord[1] = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastCoord[0];\n      this.coordinates[myEnd++] = lastCoord[1];\n    }\n    return myEnd;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} replayEnds Replay ends.\n   * @return {number} Offset.\n   */\n  CanvasReplay.prototype.drawCustomCoordinates_ = function drawCustomCoordinates_ (flatCoordinates, offset, ends, stride, replayEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      replayEnds.push(replayEnd);\n      offset = end;\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasReplay.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    var type = geometry.getType();\n    var stride = geometry.getStride();\n    var replayBegin = this.coordinates.length;\n    var flatCoordinates, replayEnd, replayEnds, replayEndss;\n    var offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      replayEndss = [];\n      var endss = geometry.getEndss();\n      offset = 0;\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var myEnds = [];\n        offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        replayEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      replayEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride, replayEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      replayEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      replayEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer]);\n    }\n    this.endGeometry(geometry, feature);\n  };\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.beginGeometry = function beginGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplay.prototype.finish = function finish () {};\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasReplay.prototype.fill_ = function fill_ (context) {\n    if (this.alignFill_) {\n      var origin = applyTransform(this.renderedTransform_, [0, 0]);\n      var repeatSize = 512 * this.pixelRatio;\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.setTransform.apply(context, resetTransform);\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  CanvasReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (context, instruction) {\n    context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (CANVAS_LINE_DASH) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.renderDeclutter_ = function renderDeclutter_ (declutterGroup, feature) {\n    if (declutterGroup && declutterGroup.length > 5) {\n      var groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {import(\"../../structs/RBush.js\").Entry} */\n        var box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!this.declutterTree.collides(box)) {\n          this.declutterTree.insert(box);\n          for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            var declutterData = /** @type {Array} */ (declutterGroup[j]);\n            if (declutterData) {\n              if (declutterData.length > 11) {\n                this.replayTextBackground_(declutterData[0],\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                  declutterData[11], declutterData[12]);\n              }\n              drawImage.apply(undefined, declutterData);\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replay_ = function replay_ (\n    context,\n    transform,\n    skippedFeaturesHash,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    /** @type {Array<number>} */\n    var pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    var skipFeatures = !isEmpty(skippedFeaturesHash);\n    var i = 0; // instruction index\n    var ii = instructions.length; // end of instructions\n    var d = 0; // data index\n    var dd; // end of per-instruction data\n    var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n    var pendingFill = 0;\n    var pendingStroke = 0;\n    var lastFillInstruction = null;\n    var lastStrokeInstruction = null;\n    var coordinateCache = this.coordinateCache_;\n    var viewRotation = this.viewRotation_;\n\n    var state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    var /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ feature;\n    var x, y;\n    while (i < ii) {\n      var instruction = instructions[i];\n      var type = /** @type {CanvasInstruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n          if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(\n            opt_hitExtent, feature.getGeometry().getExtent())) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          var x1 = pixelCoordinates[d];\n          var y1 = pixelCoordinates[d + 1];\n          var x2 = pixelCoordinates[d + 2];\n          var y2 = pixelCoordinates[d + 3];\n          var dx = x2 - x1;\n          var dy = y2 - y1;\n          var r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          var renderer = instruction[4];\n          var fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          var coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */\n              (instruction[3]);\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n          var height = /** @type {number} */ (instruction[7]);\n          var opacity = /** @type {number} */ (instruction[8]);\n          var originX = /** @type {number} */ (instruction[9]);\n          var originY = /** @type {number} */ (instruction[10]);\n          var rotateWithView = /** @type {boolean} */ (instruction[11]);\n          var rotation = /** @type {number} */ (instruction[12]);\n          var scale = /** @type {number} */ (instruction[13]);\n          var width = /** @type {number} */ (instruction[14]);\n\n          var padding = (void 0), backgroundFill = (void 0), backgroundStroke = (void 0);\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = backgroundStroke = false;\n          }\n\n          if (rotateWithView) {\n            rotation += viewRotation;\n          }\n          for (; d < dd; d += 2) {\n            this.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          var begin = /** @type {number} */ (instruction[1]);\n          var end = /** @type {number} */ (instruction[2]);\n          var baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n          var overflow = /** @type {number} */ (instruction[5]);\n          var fillKey = /** @type {string} */ (instruction[6]);\n          var maxAngle = /** @type {number} */ (instruction[7]);\n          var measure = /** @type {function(string):number} */ (instruction[8]);\n          var offsetY = /** @type {number} */ (instruction[9]);\n          var strokeKey = /** @type {string} */ (instruction[10]);\n          var strokeWidth = /** @type {number} */ (instruction[11]);\n          var text = /** @type {string} */ (instruction[12]);\n          var textKey = /** @type {string} */ (instruction[13]);\n          var textScale = /** @type {number} */ (instruction[14]);\n\n          var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          var textLength = measure(text);\n          if (overflow || textLength <= pathLength) {\n            /** @type {import(\"./TextReplay.js\").default} */\n            var textReplay = /** @type {?} */ (this);\n            var textAlign = textReplay.textStates[textKey].textAlign;\n            var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            var parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n            if (parts) {\n              var c = (void 0), cc = (void 0), chars = (void 0), label = (void 0), part = (void 0);\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n            var result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   */\n  CanvasReplay.prototype.replay = function replay (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n    this.viewRotation_ = viewRotation;\n    this.replay_(context, transform,\n      skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replayHitDetection = function replayHitDetection (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.replay_(context, transform, skippedFeaturesHash,\n      this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n  };\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  CanvasReplay.prototype.reverseHitDetectionInstructions = function reverseHitDetectionInstructions () {\n    var hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    var i;\n    var n = hitDetectionInstructions.length;\n    var instruction;\n    var type;\n    var begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {CanvasInstruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var state = this.state;\n    if (fillStyle) {\n      var fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      var strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      var strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @return {Array<*>} Fill instruction.\n   */\n  CanvasReplay.prototype.createFill = function createFill (state, geometry) {\n    var fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  CanvasReplay.prototype.applyStroke = function applyStroke (state) {\n    this.instructions.push(this.createStroke(state));\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  CanvasReplay.prototype.createStroke = function createStroke (state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState, (import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default)):Array<*>} createFill Create fill.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasReplay.prototype.updateFillStyle = function updateFillStyle (state, createFill, geometry) {\n    var fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state, geometry));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState)} applyStroke Apply stroke.\n   */\n  CanvasReplay.prototype.updateStrokeStyle = function updateStrokeStyle (state, applyStroke) {\n    var strokeStyle = state.strokeStyle;\n    var lineCap = state.lineCap;\n    var lineDash = state.lineDash;\n    var lineDashOffset = state.lineDashOffset;\n    var lineJoin = state.lineJoin;\n    var lineWidth = state.lineWidth;\n    var miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  };\n\n  /**\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.endGeometry = function endGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  };\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  CanvasReplay.prototype.getBufferedMaxExtent = function getBufferedMaxExtent () {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        var width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  };\n\n  return CanvasReplay;\n}(VectorContext));\n\n\nexport default CanvasReplay;\n\n//# sourceMappingURL=Replay.js.map","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasImageReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasImageReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  if ( CanvasReplay ) CanvasImageReplay.__proto__ = CanvasReplay;\n  CanvasImageReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasImageReplay.prototype.constructor = CanvasImageReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  CanvasImageReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(pointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(multiPointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle, declutterGroup) {\n    var anchor = imageStyle.getAnchor();\n    var size = imageStyle.getSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var image = imageStyle.getImage(1);\n    var origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.width_ = size[0];\n  };\n\n  return CanvasImageReplay;\n}(CanvasReplay));\n\n\nexport default CanvasImageReplay;\n\n//# sourceMappingURL=ImageReplay.js.map","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasLineStringReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasLineStringReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasLineStringReplay.__proto__ = CanvasReplay;\n  CanvasLineStringReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasLineStringReplay.prototype.constructor = CanvasLineStringReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  CanvasLineStringReplay.prototype.drawFlatCoordinates_ = function drawFlatCoordinates_ (flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.finish = function finish () {\n    var state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasLineStringReplay.prototype.applyStroke = function applyStroke (state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    CanvasReplay.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  };\n\n  return CanvasLineStringReplay;\n}(CanvasReplay));\n\n\nexport default CanvasLineStringReplay;\n\n//# sourceMappingURL=LineStringReplay.js.map","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\n\nvar CanvasPolygonReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasPolygonReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasPolygonReplay.__proto__ = CanvasReplay;\n  CanvasPolygonReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasPolygonReplay.prototype.constructor = CanvasPolygonReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function drawFlatCoordinatess_ (flatCoordinates, offset, ends, stride) {\n    var state = this.state;\n    var fill = state.fillStyle !== undefined;\n    var stroke = state.strokeStyle != undefined;\n    var numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (var i = 0; i < numEnds; ++i) {\n      var end = ends[i];\n      var myBegin = this.coordinates.length;\n      var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    var stride = circleGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(circleGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var ends = polygonGeometry.getEnds();\n    var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    var stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var endss = multiPolygonGeometry.getEndss();\n    var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    var stride = multiPolygonGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(multiPolygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    var tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      var coordinates = this.coordinates;\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasPolygonReplay.prototype.setFillStrokeStyles_ = function setFillStrokeStyles_ (geometry) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  };\n\n  return CanvasPolygonReplay;\n}(CanvasReplay));\n\n\nexport default CanvasPolygonReplay;\n\n//# sourceMappingURL=PolygonReplay.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\nvar CanvasTextReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasTextReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_;\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    labelCache.prune();\n\n  }\n\n  if ( CanvasReplay ) CanvasTextReplay.__proto__ = CanvasReplay;\n  CanvasTextReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasTextReplay.prototype.constructor = CanvasTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    var fillState = this.textFillState_;\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    var begin = this.coordinates.length;\n\n    var geometryType = geometry.getType();\n    var flatCoordinates = null;\n    var end = 2;\n    var stride = 2;\n    var i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      var ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        var endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      var textAlign = textState.textAlign;\n      var flatOffset = 0;\n      var flatEnd;\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this.coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end, this.declutterGroup_);\n        begin = end;\n      }\n      this.endGeometry(geometry, feature);\n\n    } else {\n      var label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n      var width = label.width / this.pixelRatio;\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n            return;\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\n              flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n            }\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill, geometry);\n          this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      this.drawTextImage_(label, begin, end);\n      this.endGeometry(geometry, feature);\n    }\n  };\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {HTMLCanvasElement} Image.\n   */\n  CanvasTextReplay.prototype.getImage = function getImage (text, textKey, fillKey, strokeKey) {\n    var label;\n    var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n    if (!labelCache.containsKey(key)) {\n      var strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n      var fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n      var textState = this.textStates[textKey] || this.textState_;\n      var pixelRatio = this.pixelRatio;\n      var scale = textState.scale * pixelRatio;\n      var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n      var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n      var lines = text.split('\\n');\n      var numLines = lines.length;\n      var widths = [];\n      var width = measureTextWidths(textState.font, lines, widths);\n      var lineHeight = measureTextHeight(textState.font);\n      var height = lineHeight * numLines;\n      var renderWidth = (width + strokeWidth);\n      var context = createCanvasContext2D(\n        Math.ceil(renderWidth * scale),\n        Math.ceil((height + strokeWidth) * scale));\n      label = context.canvas;\n      labelCache.set(key, label);\n      if (scale != 1) {\n        context.scale(scale, scale);\n      }\n      context.font = textState.font;\n      if (strokeKey) {\n        context.strokeStyle = strokeState.strokeStyle;\n        context.lineWidth = strokeWidth;\n        context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n        context.miterLimit = strokeState.miterLimit;\n        if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n          context.setLineDash(strokeState.lineDash);\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (fillKey) {\n        context.fillStyle = fillState.fillStyle;\n      }\n      context.textBaseline = 'middle';\n      context.textAlign = 'center';\n      var leftRight = (0.5 - align);\n      var x = align * label.width / scale + leftRight * strokeWidth;\n      var i;\n      if (strokeKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n      if (fillKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n    }\n    return labelCache.get(key);\n  };\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} label Label.\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  CanvasTextReplay.prototype.drawTextImage_ = function drawTextImage_ (label, begin, end) {\n    var textState = this.textState_;\n    var strokeState = this.textStrokeState_;\n    var pixelRatio = this.pixelRatio;\n    var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n    var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n    var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1, label.width,\n      textState.padding == defaultPadding ?\n        defaultPadding : textState.padding.map(function(p) {\n          return p * pixelRatio;\n        }),\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1 / pixelRatio, label.width, textState.padding,\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n  };\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   */\n  CanvasTextReplay.prototype.drawChars_ = function drawChars_ (begin, end, declutterGroup) {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var fillState = this.textFillState_;\n\n    var strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = /** @type {import(\"../canvas.js\").StrokeState} */ ({\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        });\n      }\n    }\n    var textKey = this.textKey_;\n    if (!(this.textKey_ in this.textStates)) {\n      this.textStates[this.textKey_] = /** @type {import(\"../canvas.js\").TextState} */ ({\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        scale: textState.scale\n      });\n    }\n    var fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = /** @type {import(\"../canvas.js\").FillState} */ ({\n          fillStyle: fillState.fillStyle\n        });\n      }\n    }\n\n    var pixelRatio = this.pixelRatio;\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n\n    var offsetY = this.textOffsetY_ * pixelRatio;\n    var text = this.text_;\n    var font = textState.font;\n    var textScale = textState.scale;\n    var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n    var widths = this.widths_[font];\n    if (!widths) {\n      this.widths_[font] = widths = {};\n    }\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale * pixelRatio;\n      },\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale;\n      },\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.setTextStyle = function setTextStyle (textStyle, declutterGroup) {\n    var textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = this.textFillState_ = null;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = this.textStrokeState_ = null;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n        }\n        var lineDash = textStrokeStyle.getLineDash();\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\n        var lineWidth = textStrokeStyle.getWidth();\n        var miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      var font = textStyle.getFont() || defaultFont;\n      checkFont(font);\n      var textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  };\n\n  return CanvasTextReplay;\n}(CanvasReplay));\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  var numLines = lines.length;\n  var width = 0;\n  for (var i = 0; i < numLines; ++i) {\n    var currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\nexport default CanvasTextReplay;\n\n//# sourceMappingURL=TextReplay.js.map","/**\n * @module ol/render/canvas/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from './Replay.js';\nimport CanvasImageReplay from './ImageReplay.js';\nimport CanvasLineStringReplay from './LineStringReplay.js';\nimport CanvasPolygonReplay from './PolygonReplay.js';\nimport CanvasTextReplay from './TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object<ReplayType, typeof CanvasReplay>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\nvar CanvasReplayGroup = /*@__PURE__*/(function (ReplayGroup) {\n  function CanvasReplayGroup(\n    tolerance,\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    declutterTree,\n    opt_renderBuffer\n  ) {\n    ReplayGroup.call(this);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = declutterTree;\n\n    /**\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     * @private\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<ReplayType, CanvasReplay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n  }\n\n  if ( ReplayGroup ) CanvasReplayGroup.__proto__ = ReplayGroup;\n  CanvasReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  CanvasReplayGroup.prototype.constructor = CanvasReplayGroup;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n    var declutter = null;\n    if (this.declutterTree_) {\n      if (group) {\n        declutter = this.declutterGroup_;\n        /** @type {number} */ (declutter[4])++;\n      } else {\n        declutter = this.declutterGroup_ = createEmpty();\n        declutter.push(1);\n      }\n    }\n    return declutter;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  CanvasReplayGroup.prototype.clip = function clip (context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n\n  /**\n   * @param {Array<ReplayType>} replays Replays.\n   * @return {boolean} Has replays of the provided types.\n   */\n  CanvasReplayGroup.prototype.hasReplays = function hasReplays (replays) {\n    for (var zIndex in this.replaysByZIndex_) {\n      var candidates = this.replaysByZIndex_[zIndex];\n      for (var i = 0, ii = replays.length; i < ii; ++i) {\n        if (replays[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplayGroup.prototype.finish = function finish () {\n    for (var zKey in this.replaysByZIndex_) {\n      var replays = this.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish();\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T} callback Feature callback.\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    skippedFeaturesHash,\n    callback,\n    declutterReplays\n  ) {\n\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n    var context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    var mask = getCircleArray(hitTolerance);\n    var declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    var replayType;\n\n    /**\n     * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (var i = 0; i < contextSize; i++) {\n        for (var j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              var result = (void 0);\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, j, replays, replay, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replayType = ORDER[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = declutterReplays[zIndexKey];\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  CanvasReplayGroup.prototype.getClipCoords = function getClipCoords (transform) {\n    var maxExtent = this.maxExtent_;\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @return {Object<string, Object<ReplayType, CanvasReplay>>} Replays.\n   */\n  CanvasReplayGroup.prototype.getReplays = function getReplays () {\n    return this.replaysByZIndex_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<ReplayType>=} opt_replayTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  CanvasReplayGroup.prototype.replay = function replay (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    snapToPixel,\n    opt_replayTypes,\n    opt_declutterReplays\n  ) {\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    context.save();\n    this.clip(context, transform);\n\n    var replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n        var replayType = replayTypes[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n          }\n        }\n      }\n    }\n\n    context.restore();\n  };\n\n  return CanvasReplayGroup;\n}(ReplayGroup));\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids, snapToPixel);\n    }\n  }\n}\n\n\nexport default CanvasReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/ReplayGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object)>}\n */\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n//# sourceMappingURL=vector.js.map","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function CanvasVectorLayerRenderer(vectorLayer) {\n\n    CanvasLayerRenderer.call(this, vectorLayer);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ReplayGroup.js\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = createCanvasContext2D();\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasLayerRenderer ) CanvasVectorLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasVectorLayerRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  CanvasVectorLayerRenderer.prototype.constructor = CanvasVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  CanvasVectorLayerRenderer.prototype.compose = function compose (context, frameState, layerState) {\n    var extent = frameState.extent;\n    var pixelRatio = frameState.pixelRatio;\n    var skippedFeatureUids = layerState.managed ?\n      frameState.skippedFeatureUids : {};\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var rotation = viewState.rotation;\n    var projectionExtent = projection.getExtent();\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (this.getLayer().getSource());\n\n    var transform = this.getTransform(frameState, 0);\n\n    // clipped rendering if layer extent is set\n    var clipExtent = layerState.extent;\n    var clipped = clipExtent !== undefined;\n    if (clipped) {\n      this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (clipExtent));\n    }\n    var replayGroup = this.replayGroup_;\n    if (replayGroup && !replayGroup.isEmpty()) {\n      if (this.declutterTree_) {\n        this.declutterTree_.clear();\n      }\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      var drawOffsetX = 0;\n      var drawOffsetY = 0;\n      var replayContext;\n      var transparentLayer = layerState.opacity !== 1;\n      var hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n      if (transparentLayer || hasRenderListeners) {\n        var drawWidth = context.canvas.width;\n        var drawHeight = context.canvas.height;\n        if (rotation) {\n          var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n          drawOffsetX = (drawSize - drawWidth) / 2;\n          drawOffsetY = (drawSize - drawHeight) / 2;\n          drawWidth = drawHeight = drawSize;\n        }\n        // resize and clear\n        this.context.canvas.width = drawWidth;\n        this.context.canvas.height = drawHeight;\n        replayContext = this.context;\n      } else {\n        replayContext = context;\n      }\n\n      var alpha = replayContext.globalAlpha;\n      if (!transparentLayer) {\n        // for performance reasons, context.save / context.restore is not used\n        // to save and restore the transformation matrix and the opacity.\n        // see http://jsperf.com/context-save-restore-versus-variable\n        replayContext.globalAlpha = layerState.opacity;\n      }\n\n      if (replayContext != context) {\n        replayContext.translate(drawOffsetX, drawOffsetY);\n      }\n\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var width = frameState.size[0] * pixelRatio;\n      var height = frameState.size[1] * pixelRatio;\n      rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n      replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n      if (vectorSource.getWrapX() && projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)) {\n        var startX = extent[0];\n        var worldWidth = getWidth(projectionExtent);\n        var world = 0;\n        var offsetX;\n        while (startX < projectionExtent[0]) {\n          --world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX += worldWidth;\n        }\n        world = 0;\n        startX = extent[2];\n        while (startX > projectionExtent[2]) {\n          ++world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX -= worldWidth;\n        }\n      }\n      rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (replayContext != context) {\n        if (transparentLayer) {\n          var mainContextAlpha = context.globalAlpha;\n          context.globalAlpha = layerState.opacity;\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n          context.globalAlpha = mainContextAlpha;\n        } else {\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        }\n        replayContext.translate(-drawOffsetX, -drawOffsetY);\n      }\n\n      if (!transparentLayer) {\n        replayContext.globalAlpha = alpha;\n      }\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    var transform = this.getTransform(frameState, 0);\n    this.preCompose(context, frameState, transform);\n    this.compose(context, frameState, layerState);\n    this.postCompose(context, frameState, layerState, transform);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      var resolution = frameState.viewState.resolution;\n      var rotation = frameState.viewState.rotation;\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      /** @type {!Object<string, boolean>} */\n      var features = {};\n      var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature);\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n      return result;\n    }\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    var projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      var worldWidth = getWidth(projectionExtent);\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    var replayGroup = new CanvasReplayGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {CanvasVectorLayerRenderer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array<import(\"../../Feature.js\").default>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        });\n      features.sort(vectorLayerRenderOrder);\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        render(features[i]);\n      }\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render);\n    }\n    replayGroup.finish();\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    this.replayGroupChanged = true;\n    return true;\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorLayerRenderer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {import(\"../../layer/Vector.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorTileRenderType.js.map","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = /*@__PURE__*/(function (CanvasTileLayerRenderer) {\n  function CanvasVectorTileLayerRenderer(layer) {\n\n    CanvasTileLayerRenderer.call(this, layer, true);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    var renderMode = layer.getRenderMode();\n\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n    this.zDirection = renderMode === VectorTileRenderType.VECTOR ? 1 : 0;\n\n    if (renderMode !== VectorTileRenderType.VECTOR) {\n      this.context = createCanvasContext2D();\n    }\n\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasTileLayerRenderer ) CanvasVectorTileLayerRenderer.__proto__ = CanvasTileLayerRenderer;\n  CanvasVectorTileLayerRenderer.prototype = Object.create( CanvasTileLayerRenderer && CanvasTileLayerRenderer.prototype );\n  CanvasVectorTileLayerRenderer.prototype.constructor = CanvasVectorTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n    if (tile.getState() === TileState.LOADED) {\n      this.createReplayGroup_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      if (this.context) {\n        this.renderTileImage_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    return /** @type {import(\"../../VectorImageTile.js\").default} */ (tile).getImage(tileLayer);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var layerRevision = layer.getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return CanvasTileLayerRenderer.prototype.prepareFrame.call(this, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function createReplayGroup_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var revision = layer.getRevision();\n    var renderOrder = /** @type {import(\"../../render.js\").OrderFunction} */ (layer.getRenderOrder()) || null;\n\n    var replayState = tile.getReplayState(layer);\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\n        replayState.renderedRenderOrder == renderOrder) {\n      return;\n    }\n\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var sourceTileGrid = source.getTileGrid();\n    var tileGrid = source.getTileGridForProjection(projection);\n    var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n    var tileExtent = tile.extent;\n\n    var loop = function ( t, tt ) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        return;\n      }\n\n      var sourceTileCoord = sourceTile.tileCoord;\n      var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this$1.tmpExtent);\n      var tileProjection = sourceTile.getProjection();\n      var reproject = false;\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n      replayState.dirty = false;\n      var replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this$1.declutterTree_, layer.getRenderBuffer());\n      var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      var render = function(feature) {\n        var styles;\n        var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          replayState.dirty = replayState.dirty || dirty;\n        }\n      };\n\n      var features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        var feature = features[i];\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent);\n            // tile extent in tile pixel space\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this$1, feature);\n        }\n      }\n      replayGroup.finish();\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n    };\n\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) loop( t, tt );\n    replayState.renderedRevision = revision;\n    replayState.renderedRenderOrder = renderOrder;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    var layer = this.getLayer();\n    /** @type {!Object<string, boolean>} */\n    var features = {};\n\n    var renderedTiles = /** @type {Array<import(\"../../VectorImageTile.js\").default>} */ (this.renderedTiles);\n\n    var bufferedExtent, found;\n    var i, ii;\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      var tile = renderedTiles[i];\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n      for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        var sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            var key = getUid(feature);\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n      }\n    }\n    return found;\n  };\n\n  /**\n   * @param {import(\"../../VectorTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../transform.js\").Transform} transform Transform.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function getReplayTransform_ (tile, frameState) {\n    var layer = this.getLayer();\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var tileGrid = source.getTileGrid();\n    var tileCoord = tile.tileCoord;\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var renderResolution = viewState.resolution / pixelRatio;\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    var center = viewState.center;\n    var origin = getTopLeft(tileExtent);\n    var size = frameState.size;\n    var offsetX = Math.round(pixelRatio * size[0] / 2);\n    var offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var renderMode = layer.getRenderMode();\n    if (renderMode != VectorTileRenderType.IMAGE) {\n      var declutterReplays = layer.getDeclutter() ? {} : null;\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var replayTypes = VECTOR_REPLAYS[renderMode];\n      var pixelRatio = frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      var size = frameState.size;\n      var offsetX, offsetY;\n      if (rotation) {\n        offsetX = Math.round(pixelRatio * size[0] / 2);\n        offsetY = Math.round(pixelRatio * size[1] / 2);\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\n      }\n      if (declutterReplays) {\n        this.declutterTree_.clear();\n      }\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var tiles = this.renderedTiles;\n      var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n      var clips = [];\n      var zs = [];\n      for (var i = tiles.length - 1; i >= 0; --i) {\n        var tile = /** @type {import(\"../../VectorImageTile.js\").default} */ (tiles[i]);\n        if (tile.getState() == TileState.ABORT) {\n          continue;\n        }\n        var tileCoord = tile.tileCoord;\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\n        var transform = undefined;\n        for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n          var sourceTile = tile.getTile(tile.tileKeys[t]);\n          if (sourceTile.getState() != TileState.LOADED) {\n            continue;\n          }\n          var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer, tileCoord.toString()));\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\n            // called, or it has no replays of the types we want to render\n            continue;\n          }\n          if (!transform) {\n            transform = this.getTransform(frameState, worldOffset);\n          }\n          var currentZ = sourceTile.tileCoord[0];\n          var currentClip = replayGroup.getClipCoords(transform);\n          context.save();\n          context.globalAlpha = layerState.opacity;\n          // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n          for (var j = 0, jj = clips.length; j < jj; ++j) {\n            var clip = clips[j];\n            if (currentZ < zs[j]) {\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher resolution tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n          replayGroup.replay(context, transform, rotation, {}, snapToPixel, replayTypes, declutterReplays);\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n      if (declutterReplays) {\n        replayDeclutter(declutterReplays, context, rotation, snapToPixel);\n      }\n      if (rotation) {\n        rotateAtOffset(context, rotation,\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n      }\n    }\n    CanvasTileLayerRenderer.prototype.postCompose.call(this, context, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, squaredTolerance, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function renderTileImage_ (tile, pixelRatio, projection) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var replayState = tile.getReplayState(layer);\n    var revision = layer.getRevision();\n    var replays = IMAGE_REPLAYS[layer.getRenderMode()];\n    if (replays && replayState.renderedTileRevision !== revision) {\n      replayState.renderedTileRevision = revision;\n      var tileCoord = tile.wrappedTileCoord;\n      var z = tileCoord[0];\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var tileGrid = source.getTileGridForProjection(projection);\n      var resolution = tileGrid.getResolution(z);\n      var context = tile.getContext(layer);\n      var size = source.getTilePixelSize(z, pixelRatio, projection);\n      context.canvas.width = size[0];\n      context.canvas.height = size[1];\n      var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n      for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n        var sourceTile = tile.getTile(tile.tileKeys[i]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var pixelScale = pixelRatio / resolution;\n        var transform = resetTransform(this.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        replayGroup.replay(context, transform, 0, {}, true, replays);\n      }\n    }\n  };\n\n  return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorTileLayerRenderer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {import(\"../../layer/VectorTile.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorTileLayerRenderer;\n\n//# sourceMappingURL=VectorTileLayer.js.map","/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar Map = /*@__PURE__*/(function (PluggableMap) {\n  function Map(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) Map.__proto__ = PluggableMap;\n  Map.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  Map.prototype.constructor = Map;\n\n  Map.prototype.createRenderer = function createRenderer () {\n    var renderer = new CanvasMapRenderer(this);\n    renderer.registerLayerRenderers([\n      CanvasImageLayerRenderer,\n      CanvasTileLayerRenderer,\n      CanvasVectorLayerRenderer,\n      CanvasVectorTileLayerRenderer\n    ]);\n    return renderer;\n  };\n\n  return Map;\n}(PluggableMap));\n\n\nexport default Map;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n\n//# sourceMappingURL=TileProperty.js.map","/**\n * @module ol/layer/Tile\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /*@__PURE__*/(function (Layer) {\n  function TileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    Layer.call(this, baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.TILE;\n\n  }\n\n  if ( Layer ) TileLayer.__proto__ = Layer;\n  TileLayer.prototype = Object.create( Layer && Layer.prototype );\n  TileLayer.prototype.constructor = TileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return TileLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {import(\"../source/Tile.js\").default} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\nexport default TileLayer;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /*@__PURE__*/(function (EventTarget) {\n  function Tile(tileCoord, state, opt_options) {\n    EventTarget.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {TileState}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n  }\n\n  if ( EventTarget ) Tile.__proto__ = EventTarget;\n  Tile.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Tile.prototype.constructor = Tile;\n\n  /**\n   * @protected\n   */\n  Tile.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {string} Key.\n   */\n  Tile.prototype.getKey = function getKey () {\n    return this.key + '/' + this.tileCoord;\n  };\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  Tile.prototype.getInterimTile = function getInterimTile () {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    var tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  };\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  Tile.prototype.refreshInterimChain = function refreshInterimChain () {\n    if (!this.interimTile) {\n      return;\n    }\n\n    var tile = this.interimTile;\n    var prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  };\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  Tile.prototype.getTileCoord = function getTileCoord () {\n    return this.tileCoord;\n  };\n\n  /**\n   * @return {TileState} State.\n   */\n  Tile.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {TileState} state State.\n   * @api\n   */\n  Tile.prototype.setState = function setState (state) {\n    this.state = state;\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  Tile.prototype.load = function load () {};\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  Tile.prototype.getAlpha = function getAlpha (id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    var start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    var delta = time - start + (1000 / 60); // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  };\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  Tile.prototype.inTransition = function inTransition (id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  };\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  Tile.prototype.endTransition = function endTransition (id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  };\n\n  return Tile;\n}(EventTarget));\n\n\nexport default Tile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n\nvar ImageTile = /*@__PURE__*/(function (Tile) {\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n  }\n\n  if ( Tile ) ImageTile.__proto__ = Tile;\n  ImageTile.prototype = Object.create( Tile && Tile.prototype );\n  ImageTile.prototype.constructor = ImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenImage_();\n      this.image_ = getBlankImage();\n    }\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  ImageTile.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    var image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageTile.prototype.load = function load () {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.tileLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageTile;\n}(Tile));\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  var ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  var z = tileCoord[0];\n  var digits = new Array(z);\n  var mask = 1 << (z - 1);\n  var i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  var extent = tileGrid.getExtent();\n  var tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nvar TileCache = /*@__PURE__*/(function (LRUCache) {\n  function TileCache(opt_highWaterMark) {\n\n    LRUCache.call(this, opt_highWaterMark);\n\n  }\n\n  if ( LRUCache ) TileCache.__proto__ = LRUCache;\n  TileCache.prototype = Object.create( LRUCache && LRUCache.prototype );\n  TileCache.prototype.constructor = TileCache;\n\n  /**\n   * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileCache.prototype.expireCache = function expireCache (usedTiles) {\n    while (this.canExpireCache()) {\n      var tile = this.peekLast();\n      var zKey = tile.tileCoord[0].toString();\n      if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n        break;\n      } else {\n        this.pop().dispose();\n      }\n    }\n  };\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  TileCache.prototype.pruneExceptNewestZ = function pruneExceptNewestZ () {\n    if (this.getCount() === 0) {\n      return;\n    }\n    var key = this.peekFirstKey();\n    var tileCoord = fromKey(key);\n    var z = tileCoord[0];\n    this.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.dispose();\n      }\n    }, this);\n  };\n\n  return TileCache;\n}(LRUCache));\n\n\nexport default TileCache;\n\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  var targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  var sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  var dX = x - centroidX;\n  var dY = y - centroidY;\n  var distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  var context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  var sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  var canvasWidthInUnits = getWidth(sourceDataExtent);\n  var canvasHeightInUnits = getHeight(sourceDataExtent);\n  var stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  var stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    var xPos = src.extent[0] - sourceDataExtent[0];\n    var yPos = -(src.extent[3] - sourceDataExtent[3]);\n    var srcWidth = getWidth(src.extent);\n    var srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  var targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    var source = triangle.source;\n    var target = triangle.target;\n    var x0 = source[0][0], y0 = source[0][1];\n    var x1 = source[1][0], y1 = source[1][1];\n    var x2 = source[2][0], y2 = source[2][1];\n    var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    var sourceNumericalShiftX = x0;\n    var sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    var augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    var affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    var centroidX = (u0 + u1 + u2) / 3;\n    var centroidY = (v0 + v1 + v2) / 3;\n    var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      var target = triangle.target;\n      var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n  var transformInvCache = {};\n  var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    var key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {import(\"../extent.js\").Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array<Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  var destinationTopLeft = getTopLeft(targetExtent);\n  var destinationTopRight = getTopRight(targetExtent);\n  var destinationBottomRight = getBottomRight(targetExtent);\n  var destinationBottomLeft = getBottomLeft(targetExtent);\n  var sourceTopLeft = this.transformInv_(destinationTopLeft);\n  var sourceTopRight = this.transformInv_(destinationTopRight);\n  var sourceBottomRight = this.transformInv_(destinationBottomRight);\n  var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    var leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        var minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        var maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n/**\n * Adds triangle to the triangulation.\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function addTriangle_ (a, b, c, aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function addQuad_ (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  var sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  var wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  var needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      var targetQuadExtent = boundingExtent([a, b, c, d]);\n      var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n        needsSubdivision;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n          needsSubdivision;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      var centerSrc = this.transformInv_(center);\n\n      var dx;\n      if (wrapsX) {\n        var centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      var centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        var bcSrc = this.transformInv_(bc);\n        var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        var daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        var abSrc = this.transformInv_(ab);\n        var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        var cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {import(\"../extent.js\").Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function calculateSourceExtent () {\n  var extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    var src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n/**\n * @return {Array<Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function getTriangles () {\n  return this.triangles_;\n};\n\nexport default Triangulation;\n\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /*@__PURE__*/(function (Tile) {\n  function ReprojTile(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    Tile.call(this, tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    var targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    var maxTargetExtent = this.targetTileGrid_.getExtent();\n    var maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    var targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          var tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  if ( Tile ) ReprojTile.__proto__ = Tile;\n  ReprojTile.prototype = Object.create( Tile && Tile.prototype );\n  ReprojTile.prototype.constructor = ReprojTile;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  ReprojTile.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.reproject_ = function reproject_ () {\n    var sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      var z = this.wrappedTileCoord_[0];\n      var size = this.targetTileGrid_.getTileSize(z);\n      var width = typeof size === 'number' ? size : size[0];\n      var height = typeof size === 'number' ? size : size[1];\n      var targetResolution = this.targetTileGrid_.getResolution(z);\n      var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      var targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      var leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          var sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              var state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.unlistenSources_ = function unlistenSources_ () {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  };\n\n  return ReprojTile;\n}(Tile));\n\n\nexport default ReprojTile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            var y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            var z = tileCoord[0];\n            var range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            var y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/source/Source\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from './State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} projection\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /*@__PURE__*/(function (BaseObject) {\n  function Source(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n      options.attributionsCollapsible : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {SourceState}\n     */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  if ( BaseObject ) Source.__proto__ = BaseObject;\n  Source.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Source.prototype.constructor = Source;\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  Source.prototype.getAttributions = function getAttributions () {\n    return this.attributions_;\n  };\n\n  /**\n   * @return {boolean} Aattributions are collapsible.\n   */\n  Source.prototype.getAttributionsCollapsible = function getAttributionsCollapsible () {\n    return this.attributionsCollapsible_;\n  };\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  Source.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  Source.prototype.getResolutions = function getResolutions () {\n    return abstract();\n  };\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {SourceState} State.\n   * @api\n   */\n  Source.prototype.getState = function getState () {\n    return this.state_;\n  };\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  Source.prototype.getWrapX = function getWrapX () {\n    return this.wrapX_;\n  };\n\n  /**\n   * Refreshes the source and finally dispatches a 'change' event.\n   * @api\n   */\n  Source.prototype.refresh = function refresh () {\n    this.changed();\n  };\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n   *     or `undefined`.\n   * @api\n   */\n  Source.prototype.setAttributions = function setAttributions (attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  };\n\n  /**\n   * Set the state of the source.\n   * @param {SourceState} state State.\n   * @protected\n   */\n  Source.prototype.setState = function setState (state) {\n    this.state_ = state;\n    this.changed();\n  };\n\n  return Source;\n}(BaseObject));\n\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n}\n\n\nexport default Source;\n\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = function TileGrid(options) {\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  var zoomFactor;\n  if (!options.origins) {\n    for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n      } else {\n        if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {import(\"../coordinate.js\").Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array<import(\"../coordinate.js\").Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  var extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array<number|import(\"../size.js\").Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|import(\"../size.js\").Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array<import(\"../TileRange.js\").default>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {import(\"../size.js\").Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      var tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(import(\"../tilecoord.js\").TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function forEachTileCoord (extent, zoom, callback) {\n  var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, import(\"../TileRange.js\").default): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function forEachTileCoordParentTileRange (tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n  var tileRange, x, y;\n  var tileCoordExtent = null;\n  var z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function getMaxZoom () {\n  return this.maxZoom;\n};\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function getMinZoom () {\n  return this.minZoom;\n};\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {import(\"../coordinate.js\").Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function getOrigin (z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function getResolution (z) {\n  return this.resolutions_[z];\n};\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function getResolutions () {\n  return this.resolutions_;\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function getTileCoordChildTileRange (tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      var minX = tileCoord[1] * 2;\n      var minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function getTileRangeExtent (z, tileRange, opt_extent) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function getTileRangeForExtentAndZ (extent, z, opt_tileRange) {\n  var tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  var minX = tileCoord[1];\n  var minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function getTileCoordCenter (tileCoord) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function getTileCoordExtent (tileCoord, opt_extent) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  var minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  var maxX = minX + tileSize[0] * resolution;\n  var maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function getTileCoordForCoordAndResolution (coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function getTileCoordForXYAndResolution_ (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  var z = this.getZForResolution(resolution);\n  var scale = resolution / this.getResolution(z);\n  var origin = this.getOrigin(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = scale * xFromOrigin / tileSize[0];\n  var tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.This method is for integer zoom\n * levels.The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function getTileCoordForXYAndZ_ (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = xFromOrigin / tileSize[0];\n  var tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function getTileCoordForCoordAndZ (coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function getTileCoordResolution (tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n * @param {number} z Z.\n * @return {number|import(\"../size.js\").Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function getTileSize (z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n/**\n * @param {number} z Zoom level.\n * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function getFullTileRange (z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *   If 1, the nearest lower resolution will be used. If -1, the nearest\n *   higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function getZForResolution (resolution, opt_direction) {\n  var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n/**\n * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function calculateTileRanges_ (extent) {\n  var length = this.resolutions_.length;\n  var fullTileRanges = new Array(length);\n  for (var z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\n\n\nexport default TileGrid;\n\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  var tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  var z = tileCoord[0];\n  var center = tileGrid.getTileCoordCenter(tileCoord);\n  var projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    var worldWidth = getWidth(projectionExtent);\n    var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  /** @type {XYZOptions} */\n  var xyzOptions = opt_options || {};\n\n  var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n  var gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize\n    )\n  };\n  return new TileGrid(gridOptions);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  var maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  var height = getHeight(extent);\n  var width = getWidth(extent);\n\n  var tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  var maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  var length = maxZoom + 1;\n  var resolutions = new Array(length);\n  for (var z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  var extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  var extent = projection.getExtent();\n  if (!extent) {\n    var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/source/Tile\n */\nimport {abstract} from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from './Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /*@__PURE__*/(function (Source) {\n  function TileSource(options) {\n\n    Source.call(this, {\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n  }\n\n  if ( Source ) TileSource.__proto__ = Source;\n  TileSource.prototype = Object.create( Source && Source.prototype );\n  TileSource.prototype.constructor = TileSource;\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  TileSource.prototype.canExpireCache = function canExpireCache () {\n    return this.tileCache.canExpireCache();\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileSource.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  TileSource.prototype.forEachLoadedTile = function forEachLoadedTile (projection, z, tileRange, callback) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    var covered = true;\n    var tile, tileCoordKey, loaded;\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  TileSource.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    return 0;\n  };\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  TileSource.prototype.getKey = function getKey () {\n    return this.key_;\n  };\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  TileSource.prototype.setKey = function setKey (key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  TileSource.prototype.getOpaque = function getOpaque (projection) {\n    return this.opaque_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.getResolutions = function getResolutions () {\n    return this.tileGrid.getResolutions();\n  };\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  TileSource.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    return abstract();\n  };\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  TileSource.prototype.getTileGrid = function getTileGrid () {\n    return this.tileGrid;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  TileSource.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  TileSource.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    var thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  };\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  TileSource.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return this.tilePixelRatio_;\n  };\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  TileSource.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  };\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  TileSource.prototype.getTileCoordForTileUrlFunction = function getTileCoordForTileUrlFunction (tileCoord, opt_projection) {\n    var projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    var tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.refresh = function refresh () {\n    this.tileCache.clear();\n    this.changed();\n  };\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  TileSource.prototype.useTile = function useTile (z, x, y, projection) {};\n\n  return TileSource;\n}(Source));\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport var TileSourceEvent = /*@__PURE__*/(function (Event) {\n  function TileSourceEvent(type, tile) {\n\n    Event.call(this, type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n  if ( Event ) TileSourceEvent.__proto__ = Event;\n  TileSourceEvent.prototype = Object.create( Event && Event.prototype );\n  TileSourceEvent.prototype.constructor = TileSourceEvent;\n\n  return TileSourceEvent;\n}(Event));\n\nexport default TileSource;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /*@__PURE__*/(function (TileSource) {\n  function UrlTile(options) {\n\n    TileSource.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ = !options.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction, this.key_);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  if ( TileSource ) UrlTile.__proto__ = TileSource;\n  UrlTile.prototype = Object.create( TileSource && TileSource.prototype );\n  UrlTile.prototype.constructor = UrlTile;\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  UrlTile.prototype.getTileLoadFunction = function getTileLoadFunction () {\n    return this.tileLoadFunction;\n  };\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  UrlTile.prototype.getTileUrlFunction = function getTileUrlFunction () {\n    return this.tileUrlFunction;\n  };\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  UrlTile.prototype.getUrls = function getUrls () {\n    return this.urls;\n  };\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  UrlTile.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    var uid = getUid(tile);\n    var tileState = tile.getState();\n    var type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  };\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  UrlTile.prototype.setTileLoadFunction = function setTileLoadFunction (tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  UrlTile.prototype.setTileUrlFunction = function setTileUrlFunction (tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  UrlTile.prototype.setUrl = function setUrl (url) {\n    var urls = this.urls = expandUrl(url);\n    this.setUrls(urls);\n  };\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  UrlTile.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  UrlTile.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UrlTile;\n}(TileSource));\n\n\nexport default UrlTile;\n\n//# sourceMappingURL=UrlTile.js.map","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /*@__PURE__*/(function (UrlTile) {\n  function TileImage(options) {\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  if ( UrlTile ) TileImage.__proto__ = UrlTile;\n  TileImage.prototype = Object.create( UrlTile && UrlTile.prototype );\n  TileImage.prototype.constructor = TileImage;\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.canExpireCache = function canExpireCache () {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.canExpireCache.call(this);\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (var key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.expireCache = function expireCache (projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n      return;\n    }\n    var usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (var id in this.tileCacheForProjection) {\n      var tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  };\n\n  /**\n   * @return {number} Gutter.\n   */\n  TileImage.prototype.getGutter = function getGutter () {\n    return 0;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getOpaque = function getOpaque (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return UrlTile.prototype.getOpaque.call(this, projection);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  TileImage.prototype.createTile_ = function createTile_ (z, x, y, pixelRatio, projection, key) {\n    var tileCoord = [z, x, y];\n    var urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    var tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    var tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE,\n      this.handleTileChange, this);\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      var cache = this.getTileCacheForProjection(projection);\n      var tileCoord = [z, x, y];\n      var tile;\n      var tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n      }\n      var key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        var targetTileGrid = this.getTileGridForProjection(projection);\n        var wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  TileImage.prototype.getTileInternal = function getTileInternal (z, x, y, pixelRatio, projection) {\n    var tile = null;\n    var tileCoordKey = getKeyZXY(z, x, y);\n    var key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        var interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  TileImage.prototype.setRenderReprojectionEdges = function setRenderReprojectionEdges (render) {\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (var id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  TileImage.prototype.setTileGridForProjection = function setTileGridForProjection (projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      var proj = getProjection(projection);\n      if (proj) {\n        var projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  };\n\n  return TileImage;\n}(UrlTile));\n\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /*@__PURE__*/(function (TileImage) {\n  function XYZ(opt_options) {\n    var options = opt_options || {};\n    var projection = options.projection !== undefined ?\n      options.projection : 'EPSG:3857';\n\n    var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n      createXYZ({\n        extent: extentFromProjection(projection),\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize\n      });\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n  }\n\n  if ( TileImage ) XYZ.__proto__ = TileImage;\n  XYZ.prototype = Object.create( TileImage && TileImage.prototype );\n  XYZ.prototype.constructor = XYZ;\n\n  return XYZ;\n}(TileImage));\n\nexport default XYZ;\n\n//# sourceMappingURL=XYZ.js.map","<template id = \"app\">\n    <div id=\"map\" ref=\"rootmap\">\n      <div id=\"popup\" class=\"ol-popup\">\n      <a href=\"#\" id=\"popup-closer\" class=\"ol-popup-closer\" @click = \"closePopup()\"></a>\n      <div id=\"popup-content\">{{10+12}}</div>\n    </div>\n      <!-- <Popup id = \"popup\" name =\"popup\" msg=\"测试\"/>  -->\n    </div>\n    \n</template>\n\n<script>\n// import Vue from 'vue';\nimport \"ol/ol.css\";\nimport { Map, View,Overlay } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport XYZ from 'ol/source/XYZ';\n// import Popup from '@/components/Popup.vue'\n\n// new Vue({\n//   el:\"#app\",\n//   data:{\n\n//     template: '<div>sdfsfsdf</div>'\n//   }\n// })\n\n// import Popup from '@/components/Popup.vue'\nexport default {\n  data() {\n    return {\n      map: null\n    };\n  },\n  mounted() {\n    this.initMap()\n  },\n   methods: {\n    initMap(){\n\n\n       var container = document.getElementById('popup');\n      // var content = document.getElementById('popup-content');\n      var closer = document.getElementById('popup-closer');\n       \n      var overlay = new Overlay({\n        element: container,\n        autoPan: true,\n        autoPanAnimation: {\n          duration: 250\n        }\n      });\n      closer.onclick = function() {\n        overlay.setPosition(undefined);\n        closer.blur();\n        return false;\n      };\n     this.map =  new Map({\n      target: \"map\",\n      overlays: [overlay],\n      layers: [\n        new TileLayer({\n           source: new XYZ({\n                    url:\"https://mt1.google.cn/maps/vt?lyrs=s%40721&hl=zh-CN&gl=CN&x={x}&y={y}&z={z}\"\n                })\n        })\n      ],\n      view: new View({\n        projection: \"EPSG:4326\",    \n        center: [120.064839,30.2548857], \n        zoom: 12\n      })\n    \n    \n    \n    });\n    this.map.on('singleclick', function(evt) {\n      console.info(\"singleClicked\"+evt);\n      var coordinate = evt.coordinate;\n        // var hdms = toStringHDMS(toLonLat(coordinate));\n\n        // content.innerHTML = '<p>You clicked here:</p><code>' + hdms +\n        //     '</code>';\n        overlay.setPosition(coordinate);\n    })\n    },\n    closePopup(){\n      alert(\"hehe\");\n    }\n  },\n};\n</script>\n\n<style scoped>\n#map{height:100%;}\n/*隐藏ol的一些自带元素*/\n.ol-attribution,.ol-zoom { display: none;}\n.ol-popup {\n        position: absolute;\n        background-color: white;\n        -webkit-filter: drop-shadow(0 1px 4px rgba(0,0,0,0.2));\n        filter: drop-shadow(0 1px 4px rgba(0,0,0,0.2));\n        padding: 15px;\n        border-radius: 10px;\n        border: 1px solid #cccccc;\n        bottom: 12px;\n        left: -50px;\n        min-width: 280px;\n      }\n      .ol-popup:after, .ol-popup:before {\n        top: 100%;\n        border: solid transparent;\n        content: \" \";\n        height: 0;\n        width: 0;\n        position: absolute;\n        pointer-events: none;\n      }\n      .ol-popup:after {\n        border-top-color: white;\n        border-width: 10px;\n        left: 48px;\n        margin-left: -10px;\n      }\n      .ol-popup:before {\n        border-top-color: #cccccc;\n        border-width: 11px;\n        left: 48px;\n        margin-left: -11px;\n      }\n      .ol-popup-closer {\n        text-decoration: none;\n        position: absolute;\n        top: 2px;\n        right: 8px;\n      }\n      .ol-popup-closer:after {\n        content: \"✖\";\n      }\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Openlayers.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Openlayers.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Openlayers.vue?vue&type=template&id=19db3d6a&scoped=true&\"\nimport script from \"./Openlayers.vue?vue&type=script&lang=js&\"\nexport * from \"./Openlayers.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Openlayers.vue?vue&type=style&index=0&id=19db3d6a&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"19db3d6a\",\n  null\n  \n)\n\nexport default component.exports","<template>\n <div class=\"test\">\n   <Openlayers mapWidth=\"100%\" mapHeight=\"600px\">\n     <!-- <Popup msg=\"测试\"/> -->\n   </Openlayers>\n  </div>\n \n</template>\n<script>\n// @ is an alias to /src\nimport Openlayers from '@/components/ol/Openlayers.vue'\n\nexport default {\n  name: 'openlayers',\n  components: {\n    Openlayers\n  }\n}\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./openlayers.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./openlayers.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./openlayers.vue?vue&type=template&id=1d8b0d48&\"\nimport script from \"./openlayers.vue?vue&type=script&lang=js&\"\nexport * from \"./openlayers.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}